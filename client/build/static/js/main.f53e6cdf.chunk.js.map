{"version":3,"sources":["Services/AuthorizationService.js","utils/API.js","Context/AuthorizationContext.js","components/navbar.js","components/main-home.js","components/Modal.js","components/main-login.js","components/createArtist.js","components/artist-ReviewBody.js","components/artist-ReviewsTable.js","components/artist-Links.js","components/ArtistLinkInput.js","components/ArtistEdit.js","components/CloudinaryWidget.js","components/artist-artistBody.js","components/main-artist.js","components/venueAPIBody.js","components/venueAPI.js","components/venueDBReviewsBody.js","components/venueDBReviewsTable.js","components/venueDB.js","components/main-venuepage.js","components/createVenue.js","components/createReviewVenueSelector.js","components/createReview.js","components/artist-Update.js","hocs/UserRoutes.js","hocs/NonUserRoutes.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["user","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","isAuthenticated","userName","API","getBandByUserId","id","axios","get","getBand","createBand","bandData","post","updateBandData","put","deleteBand","delete","getVenueById","getVenueByName","name","getVenues","createVenueById","createVenueByName","venueData","postVenueReview","reviewData","searchFourSquare","queryData","createReview","updateReview","deleteReview","getReviewByBand","bandId","getReviewByVenue","venueId","recaptchaUserVerify","responseToken","response","console","log","deleteLink","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","isAuth","setIsAuth","isLoading","setIsLoading","setId","useEffect","AuthServices","bandRes","_id","Provider","value","NavBar","useContext","history","useHistory","localStorage","getItem","logoutButton","removeItem","push","className","style","backgroundColor","alt","src","maxHeight","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","onClick","Home","ModalAlert","show","handleClose","error","title","Modal","onHide","Header","Title","Body","Footer","Button","variant","LogIn","password","setUser","errMsg","setErrMsg","setShow","onChange","e","target","htmlFor","aria-describedby","placeholder","preventDefault","setItem","document","getElementById","CreateArtist","passColor","setPassColor","confirmPassColor","setConfirmPassColor","msgToggle","setMsgToggle","passStrength","setPassStrength","passToggle","setPassToggle","passCheck","setPassCheck","btnVisible","setBtnVisible","passwordEl","useRef","confirmPassEl","handleShow","createArtist","onSubmit","a","errors","message","resUser","required","onInput","current","test","ref","fontSize","margin","visibility","display","sitekey","process","render","ReviewBody","review","venueName","setVenueName","venue","result","fetchVenue","formatter","Intl","DateTimeFormat","year","month","day","format","Date","parse","createdAt","initialRating","rating","emptySymbol","readonly","fullSymbol","reviewText","ReviewsTable","reviews","map","ArtistLinks","artist","edit","handleOnClick","parentNode","remove","links","bandLinks","link","href","siteUrl","rel","siteName","aria-hidden","marginBottom","ArtistLinkInput","linkId","defaultValue","length","disabled","window","location","hash","includes","ArtistEdit","create","handleEdit","editArtist","setEditArtist","createPage","setCreatePage","addLink","setAddLink","modalMsg","setModalMsg","deleteId","setDeleteId","linkInputs","forEach","i","deleteLinkInput","filter","key","updatedArtist","splice","handleChange","updateArtist","bandName","rows","bandBio","undefined","contact","input","event","url","linkValue","linkType","newArtist","toLowerCase","trim","replace","CloudinaryWidget","props","btnToggle","setBtnToggle","sources","sourceKeys","facebookAppId","instagramClientId","resourceType","cloudName","uploadPreset","buttonText","color","border","width","borderRadius","height","cropping","onSuccess","results","onFailure","err","Artist","userId","substring","lastIndexOf","renderBandLinks","bandImg","renderImg","info","reload","BandPage","match","setArtist","setReviews","setEdit","params","VenueBody","isDuplicate","setIsDuplicate","createReviewLink","address","city","state","newVenue","setNewVenue","createDBVenue","dbVenues","dbVenue","dbVenueName","compairDB","APIVenue","venuesAPI","VenueReviewBody","artistName","setArtistName","artistId","setArtistId","author","artistReview","fetchArtist","VenueReviewsTable","Venue","reviewsRating","setReviewsRating","venuesReviews","reviewsAvg","reduce","b","fetchReviews","venueAddress","VenuePage","setdbVenues","setisLoading","radius","search","setSearch","setVenueAPI","fetchVenuesAPI","newRadius","venues","fetchVenues","newResult","allVenues","matchedVenues","notmatchVenues","CreateVenue","newVenueName","setNewVenueName","postNewVenue","createAddress","VenueSelector","CreateReview","setAllVenues","venueReview","setVenueReview","parseInt","submitReview","maxlength","UpdateArtist","userArtist","UserRoutes","Component","component","rest","pathname","from","bandpage","App","path","exact","NonUserRoutes","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"wLAEgB,EAEL,SAAAA,GACH,OAAOC,MAAM,2BAA4B,CACrCC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACL,eAAgB,sBAErBC,MAAM,SAAAC,GACL,OAAkB,MAAfA,EAAIC,OACID,EAAIE,OAAOH,MAAK,SAAAI,GAAI,OAAEA,KAEtB,CAACC,iBAAiB,EAAOZ,KAAM,CAACa,SAAU,SAbjD,EAiBJ,WACJ,OAAOZ,MAAM,6BACZM,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GAAI,OAAGA,MApBL,EAuBK,WACb,OAAOV,MAAM,oCACZM,MAAK,SAAAC,GACF,OAAkB,MAAfA,EAAIC,OACID,EAAIE,OAAOH,MAAK,SAAAI,GAAI,OAAEA,KAEtB,CAACC,iBAAiB,EAAOZ,KAAM,CAACa,SAAU,S,iBCqDlDC,EAjFH,CAERC,gBAFQ,SAEQC,GACZ,OAAOC,IAAMC,IAAN,6BAAgCF,KAG3CG,QANQ,SAMAH,GACJ,OAAOC,IAAMC,IAAN,6BAAgCF,KAG3CI,WAVQ,SAUGC,GACP,OAAOJ,IAAMK,KAAK,sBAAuBD,IAG7CE,eAdQ,SAcOP,EAAIK,GACf,OAAOJ,IAAMO,IAAN,6BAAgCR,GAAMK,IAGjDI,WAlBQ,SAkBGT,GACP,OAAOC,IAAMS,OAAN,6BAAmCV,KAG9CW,aAtBQ,SAsBKX,GACT,OAAOC,IAAMC,IAAN,6BAAgCF,KAG3CY,eA1BQ,SA0BOC,GACX,OAAOZ,IAAMC,IAAN,mCAAsCW,KAGjDC,UA9BQ,WA+BJ,OAAOb,IAAMC,IAAN,yBAGXa,gBAlCQ,SAkCQf,GACZ,OAAOC,IAAMK,KAAN,8BAAkCN,KAG7CgB,kBAtCQ,SAsCUH,EAAMI,GACpB,OAAOhB,IAAMK,KAAN,8BAAkCO,GAAQI,IAGrDC,gBA1CQ,SA0CQC,GACZ,OAAOlB,IAAMO,IAAN,8BAAiCW,KAE5CC,iBA7CQ,SA6CSC,GACb,OAAOpB,IAAMK,KAAN,gCAAoCe,EAApC,OAGXC,aAjDQ,SAiDKtB,EAAImB,GACb,OAAOlB,IAAMK,KAAN,gCAAoCN,GAAMmB,IAGrDI,aArDQ,SAqDKvB,GACT,OAAOC,IAAMO,IAAN,gCAAmCR,KAG9CwB,aAzDQ,SAyDKxB,GACT,OAAOC,IAAMS,OAAN,gCAAsCV,KAGjDyB,gBA7DQ,SA6DQC,GACZ,OAAOzB,IAAMC,IAAN,qCAAwCwB,KAGnDC,iBAjEQ,SAiESC,GACb,OAAO3B,IAAMC,IAAN,sCAAyC0B,KAGpDC,oBArEQ,SAqEYC,GAChB,OAAO7B,IAAMK,KAAN,0BAA8BwB,IAChCvC,MAAK,SAAAwC,GACF,OAAOA,EAAWC,QAAQC,IAAI,kBAAoBD,QAAQC,IAAI,0BAI1EC,WA5EQ,SA4EIvC,GACR,OAAOM,IAAMO,IAAI,qBAAsBb,K,OC7ElCwC,EAAcC,0BAgCZC,EA9BM,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAAa,EAEKC,mBAAS,IAFd,mBAEzBC,EAFyB,KAEZC,EAFY,OAGJF,oBAAS,GAHL,mBAGzBG,EAHyB,KAGjBC,EAHiB,OAIEJ,oBAAS,GAJX,mBAIzBK,EAJyB,KAIdC,EAJc,OAKdN,qBALc,mBAKzBvC,EALyB,KAKrB8C,EALqB,KAoBhC,OAbKC,qBAAU,WACNC,IAA+BzD,MAAK,SAAAI,GAChC8C,EAAe9C,EAAKX,MACpB2D,EAAUhD,EAAKC,iBACfiD,GAAa,GAEd/C,EAAIC,gBAAgBJ,GACnBJ,MAAK,SAAA0D,GACFH,EAAMG,EAAQtD,KAAK,GAAGuD,aAG9B,IAGJ,8BAEMN,EACF,cAACT,EAAYgB,SAAb,CAAsBC,MAAO,CAACZ,cAAaC,iBAAgBC,SAAOC,YAAWG,QAAO9C,MAApF,SACKsC,IAFO,4CC0DTe,EAjFA,WAAM,MAEoCC,qBAAWnB,GAA3DO,EAFY,EAEZA,OAAQD,EAFI,EAEJA,eAAgBE,EAFZ,EAEYA,UAAWG,EAFvB,EAEuBA,MAAO9C,EAF9B,EAE8BA,GAC3CuD,EAAUC,cAChBT,qBAAU,WACRD,EAAMW,aAAaC,QAAQ,SAC1B,IAEH,IAQQC,EAAc,WAClBX,IACCzD,MAAK,SAAAC,GACJiD,EAAe,IACfE,GAAU,GACVG,EAAM,IACNW,aAAaG,WAAW,MACxBL,EAAQM,KAAK,SA6CjB,OACE,sBAAKC,UAAU,8CAA8CC,MA1D7C,CAClBC,gBAAiB,QAyDf,UACE,qBAAKC,IAAI,aAAaC,IAAI,iCAAiCH,MA9DhD,CACfI,UAAW,UA8DP,wBAAQL,UAAU,iBAAiBM,KAAK,SAASC,cAAY,WAAWC,cAAY,qBAAqBC,gBAAc,oBAAoBC,gBAAc,QAAQC,aAAW,oBAA5K,SACE,sBAAMX,UAAU,0BAElB,qBAAKA,UAAU,2BAA2B9D,GAAG,oBAA7C,SACO0C,EA3BP,qBAAIoB,UAAU,qBAAd,UACE,6BACE,cAAC,IAAD,CAAMY,GAAE,oBAAe1E,GAAvB,SACA,oBAAI8D,UAAU,iBAAd,8BAGF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMY,GAAE,qBAAgB1E,GAAxB,SACA,oBAAI8D,UAAU,iBAAd,+BAGF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMY,GAAG,IAAT,SACA,oBAAIZ,UAAU,iBAAiBa,QAAShB,EAAxC,6BA/BJ,qBAAIG,UAAU,qBAAd,UACE,qBAAIA,UAAU,WAAd,UACE,cAAC,IAAD,CAAMY,GAAG,IAAT,SACE,oBAAIZ,UAAU,iBAAd,oBACK,sBAAMA,UAAU,UAAhB,0BAET,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMY,GAAG,aAAT,SACA,oBAAIZ,UAAU,iBAAd,wCCnBGc,EApBF,WAET,OAEA,sBAAKd,UAAU,+DAAf,UACA,qBAAKA,UAAU,YAAYG,IAAI,aAAaC,IAAI,oCAChD,oBAAIJ,UAAU,cAAd,2CACA,sBAAKA,UAAU,qCAAf,UACA,cAAC,IAAD,CAAMY,GAAG,SAAT,SACA,wBAAQZ,UAAU,yBAAlB,sBAEA,cAAC,IAAD,CAAMY,GAAG,gBAAT,SACA,wBAAQZ,UAAU,yBAAlB,qC,+BCUWe,EAtBI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAG5C,OACI,eAACC,EAAA,EAAD,CAAOJ,KAAOA,EAAOK,OAASJ,EAA9B,UACI,cAACG,EAAA,EAAME,OAAP,UACI,cAACF,EAAA,EAAMG,MAAP,UACMJ,EAAQ,WAAa,aAG/B,cAACC,EAAA,EAAMI,KAAP,UACI,iCAAUN,MAEd,cAACE,EAAA,EAAMK,OAAP,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYd,QAAUI,EAAtC,yBC8EDW,EAzFD,WAEV,IAAInC,EAAUC,cAFE,EAKOjB,mBAAS,CAAC1C,SAAS,GAAI8F,SAAS,GAAI3F,GAAG,KAL9C,mBAKThB,EALS,KAKH4G,EALG,OAOYrD,mBAAS,IAPrB,mBAOTsD,EAPS,KAODC,EAPC,OASQvD,oBAAS,GATjB,mBASTuC,EATS,KASHiB,EATG,OAY2BzC,qBAAWnB,GAA/CM,EAZS,EAYTA,eAAgBE,EAZP,EAYOA,UAAWG,EAZlB,EAYkBA,MAG5BkD,EAAS,SAACC,GACZL,EAAQ,2BAAI5G,GAAL,kBAAYiH,EAAEC,OAAOrF,KAAOoF,EAAEC,OAAO9C,UA+BhD,OACI,sBAAKU,UAAU,+DAAf,UAEI,qBAAKA,UAAU,YAAYG,IAAI,aAAaC,IAAI,mCAChD,oBAAIJ,UAAU,cAAd,2CAIA,sBAAKA,UAAU,qCAAf,UACI,uBAAMA,UAAU,kBAAhB,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOqC,QAAQ,aAAf,2BAGA,uBAAO/B,KAAK,QAAQ4B,SAAUA,EAAUnF,KAAK,WAAWiD,UAAU,eAAe9D,GAAG,aAAaoG,mBAAiB,YAAYC,YAAY,mBAG9I,sBAAKvC,UAAU,aAAf,UACI,uBAAOqC,QAAQ,gBAAf,sBAGA,uBAAO/B,KAAK,WAAW4B,SAAUA,EAAUnF,KAAK,WAAWiD,UAAU,eAAe9D,GAAG,gBAAgBqG,YAAY,gBAGvH,wBAAQjC,KAAK,SAASO,QA/CrB,SAAAsB,GACbA,EAAEK,iBACFtD,EAAmBhE,GAClBO,MAAK,SAAAC,GACCA,EAAII,iBACH6C,EAAejD,EAAIK,UACnB8C,EAAUnD,EAAII,iBACdE,EAAIC,gBAAgBP,EAAIQ,IACvBT,MAAK,SAAA0D,GACFH,EAAMG,EAAQtD,KAAK,GAAGuD,KACtBO,aAAa8C,QAAQ,KAArB,UAA8BtD,EAAQtD,KAAK,GAAGuD,MAC9CK,EAAQM,KAAR,oBAA0BZ,EAAQtD,KAAK,GAAGuD,WAG9CsD,SAASC,eAAe,iBAAiBrD,MAAQ,GACjDoD,SAASC,eAAe,cAAcrD,MAAQ,GAC9C0C,EAAU,8BAnBGC,GAAQ,QAkDwBjC,UAAU,0BAAnD,oBAIA,cAAC,IAAD,CAAMY,GAAG,gBAAT,SACI,wBAAQZ,UAAU,0BAAlB,iCAMR,cAAC,EAAD,CAAOgB,KAAMA,EAAMC,YA9DX,kBAAMgB,GAAQ,IA8DuBf,MAAOa,W,+BCoHrDa,EArMM,WAEjB,IAAInD,EAAUC,cAFS,EAKCjB,mBAAS,CAAC,CAC9B,SAAY,GACZ,SAAY,GACZ,SAAY,GACZ,SAAY,MATO,mBAKhBvD,EALgB,KAKV4G,EALU,OAYWrD,mBAAS,IAZpB,mBAYhBoE,EAZgB,KAYLC,EAZK,OAcyBrE,mBAAS,IAdlC,mBAchBsE,EAdgB,KAcEC,EAdF,OAgBWvE,mBAAS,UAhBpB,mBAgBhBwE,EAhBgB,KAgBLC,EAhBK,OAkBiBzE,oBAAS,GAlB1B,mBAkBhB0E,EAlBgB,KAkBFC,EAlBE,OAoBa3E,mBAAS,QApBtB,mBAoBhB4E,EApBgB,KAoBJC,EApBI,OAsBW7E,mBAAS,IAtBpB,mBAsBhB8E,EAtBgB,KAsBLC,EAtBK,OAwBa/E,mBAAS,UAxBtB,mBAwBhBgF,EAxBgB,KAwBJC,EAxBI,OA0BKjF,mBAAS,IA1Bd,mBA0BhBsD,EA1BgB,KA0BRC,EA1BQ,OA4BCvD,oBAAS,GA5BV,mBA4BhBuC,EA5BgB,KA4BViB,EA5BU,QA+BoBzC,qBAAWnB,GAA/CM,GA/BgB,GA+BhBA,eAAgBE,GA/BA,GA+BAA,UAAWG,GA/BX,GA+BWA,MAG5B2E,GAAaC,iBAAO,IACpBC,GAAgBD,iBAAO,IAIvBE,GAAa,kBAAM7B,GAAQ,IAG3B8B,GAAe,SAAA5B,GACjB,IAAMpF,EAAOoF,EAAEC,OAAOrF,KAChBuC,EAAQ6C,EAAEC,OAAO9C,MAEvBwC,EAAQ,2BAAI5G,GAAL,kBAAY6B,EAAOuC,MAuF9B,OACI,qBAAKU,UAAU,oEAAf,SACI,sBAAKA,UAAU,kBAAf,UACA,oBAAIA,UAAU,cAAd,wCACI,uBAAMgE,SAhDG,SAAA7B,GACjBA,EAAEK,iBAECtH,EAAK2G,WAAa0B,GACjBb,SAASC,eAAe,YAAYrD,MAAM,GAC1CoD,SAASC,eAAe,aAAarD,MAAM,GAC3C0C,EAAU,6CACVc,EAAa,IACbE,EAAoB,IACpBM,EAAc,QACdF,GAAgB,GAChBU,MAEA,sBAAC,8BAAAG,EAAA,+EAGyBjI,EAAIM,WAAWpB,GAHxC,YAGaQ,EAHb,QAKeG,KAAKqI,OALpB,iBAMWxB,SAASC,eAAe,YAAYrD,MAAQ,GAC5C0C,EAAUtG,EAAIG,KAAKqI,OAAOnI,SAASoI,SACnCL,KARX,yCAUiC5E,EAAmBhE,GAVpD,SAUiBkJ,EAVjB,QAW2BtI,iBACR6C,GAAeyF,EAAQrI,UACvB8C,GAAUuF,EAAQtI,iBAClBE,EAAIC,gBAAgBmI,EAAQlI,IACvBT,MAAK,SAAA0D,GACFH,GAAMG,EAAQtD,KAAK,GAAGuD,KAEtBK,EAAQM,KAAR,wBAA8BZ,EAAQtD,KAAK,GAAGuD,WAGtD4C,EAAU,8BACV8B,MAtBnB,0DAyBmB5F,QAAQgD,MAAR,MAzBnB,yDAAD,IAmCI,UAEI,sBAAKlB,UAAU,aAAf,UACI,uBAAOqC,QAAQ,WAAf,+BAGA,uBAAO/B,KAAK,OAAON,UAAU,eAAe9D,GAAG,WAAWoG,mBAAiB,eAAeC,YAAY,aAAaxF,KAAK,WAAWmF,SAAU6B,GAAcM,UAAQ,OAGvK,sBAAKrE,UAAU,aAAf,UACI,uBAAOqC,QAAQ,WAAf,qCAGA,uBAAO/B,KAAK,OAAON,UAAU,eAAe9D,GAAG,eAAeoG,mBAAiB,WAAWC,YAAY,iBAAiBxF,KAAK,WAAWmF,SAAU6B,QAGrJ,sBAAK/D,UAAU,aAAf,UACI,uBAAOqC,QAAQ,WAAf,8BAGA,uBAAO/B,KAAK,QAAQN,UAAU,eAAe9D,GAAG,WAAWoG,mBAAiB,YAAYC,YAAY,2BAA2BxF,KAAK,WAAWmF,SAAW6B,GAAeM,UAAQ,OAGrL,sBAAKrE,UAAU,aAAf,UACI,uBAAOqC,QAAQ,WAAf,8BAGA,uBAAO/B,KAAK,WAAWN,UAAU,eAAe9D,GAAG,WAAWqG,YAAY,WAAWxF,KAAK,WAAWmF,SAAW6B,GAAeO,QAlHjI,WAEd,IACQhF,EAAUqE,GAAWY,QAArBjF,MAER4D,EAAa,WAHC,2EAMJsB,KAAKlF,IACXgE,EAAc,SACdR,EAAa,wBAEbQ,EAAc,QACdR,EAAa,wBAqGoJ2B,IAAKd,GAAY1D,MAAO,CAAEC,gBAAiB2C,GAAawB,UAAQ,IACrN,mBAAGpE,MAAO,CAAEyE,SAAU,OAAQC,OAAQ,QAASC,WAAY3B,GAA3D,iEAGJ,sBAAKjD,UAAU,aAAf,UACI,uBAAOqC,QAAQ,YAAYpC,MAAO,CAAE4E,QAASxB,GAA7C,+BAGA,uBAAO/C,KAAK,WAAWN,UAAU,eAAe9D,GAAG,YAAYqG,YAAY,mBAAmBxF,KAAK,YAAYkD,MAAO,CAAE4E,QAASxB,EAAYnD,gBAAiB6C,GAAoBb,SAxGlL,WAAO,IACf5C,EAAUuE,GAAcU,QAAxBjF,MAEJA,IAAUpE,EAAK2G,UACfmB,EAAoB,sBACpBI,GAAgB,IACXJ,EAAoB,sBAG7BQ,EAAalE,IA+F8MmF,IAAMZ,GAAgBQ,UAAQ,OAG7O,cAAC,EAAD,CAAYrD,KAAOA,EAAOC,YAzItB,kBAAMgB,GAAQ,IAyIoCf,MAAQa,IAE9D,cAAC,IAAD,CACI+C,QAAUC,2CACVC,OAAO,WACP9C,SAnGI,SAAClE,GACjBmF,IACAO,EAAc,WACd1H,EAAI+B,oBAAoBC,KAiGZiC,MAAO,CAAE4E,QAAS1B,EAAe,QAAU,UAG/C,wBAAQ7C,KAAK,SAAShB,MAAO,SAAUU,UAAU,qBAAsBC,MAAO,CAAC2E,WAAYnB,GAA3F,6B,QClKLwB,EA1BI,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EACKzG,mBAAU,IADf,mBACtB0G,EADsB,KACXC,EADW,KAE7BnG,qBAAU,YACU,uCAAG,4BAAAgF,EAAA,sEACIjI,EAAIa,aAAaqI,EAAOG,OAD5B,OACXC,EADW,OAEjBF,EAAaE,EAAOzJ,KAAKsJ,WAFR,2CAAH,qDAIhBI,KACC,CAACL,EAAOG,QAEb,IAAMG,EAAY,IAAIC,KAAKC,eAAe,QAAS,CACjDC,KAAM,UACNC,MAAO,OACPC,IAAK,YAGP,OACI,+BACE,6BAAKL,EAAUM,OAAOC,KAAKC,MAAMd,EAAOe,cACvC,6BAAKd,IACL,6BAAI,cAAC,IAAD,CAAQe,cAAehB,EAAOiB,OAAQC,YAAY,qBAAqBC,UAAQ,EAACC,WAAW,uBAC/F,6BAAKpB,EAAOqB,iBCDRC,EArBM,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAEnB,OAF2C,EAAf3H,UAER,6CAEhB,wBAAOkB,UAAU,6EAAjB,UACA,gCACI,+BACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,wBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,yBAGN,gCACGyG,EAAQC,KAAI,SAAAxB,GAAM,OAAK,cAAC,EAAD,CAAYA,OAAQA,GAAaA,EAAO9F,cCyBzDuH,EArCK,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAQ9H,EAA6B,EAA7BA,UAAWqC,EAAkB,EAAlBA,MAAO0F,EAAW,EAAXA,KAGvCC,EAAgB,SAAC3E,GACnBnG,EAAIoC,WAAW,CAACR,OAAOgJ,EAAOxH,IAAKlD,GAAGiG,EAAEC,OAAOlG,KAC/CwG,SAASC,eAAeR,EAAEC,OAAOlG,IAAI6K,WAAWA,WAAWC,UAIzDC,EAAQL,EAAOM,UAAUR,KAAI,SAACS,GAAD,OAC/B,qBAAmBnH,UAAU,iBAA7B,UACI,mBAAGoH,KAAI,kBAAaD,EAAKE,SAAWjF,OAAO,SAASkF,IAAI,aAAxD,SACKH,EAAKI,WAEPV,EACH,+BACI,mBAAG7G,UAAU,cAAcwH,cAAY,OAAOtL,GAAIiL,EAAK/H,IAAKyB,QAAUiG,MAFhE,KAKV,yBATKK,EAAK/H,QAclB,OAAON,EAAa,6CAEhB,sBAAKkB,UAAU,qBAAf,UACI,mBAAGC,MAAO,CAACwH,aAAc,GAAzB,SACI,8BAAItG,EAAJ,0BAEJ,6BACM8F,Q,QCGHS,EArCS,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,MAAOU,EAAqB,EAArBA,OAAQX,EAAa,EAAbA,OAOtC,OACI,sBAAKhH,UAAU,uBAAf,UACI,uBACIM,KAAK,OACLN,UAAU,eACV9D,GAAE,iBAAYyL,GACdpF,YAAY,eACZxF,KAAK,UACL6K,aAAeX,EAAMY,QAAUF,EAAS,EAAIV,EAAMU,GAAQN,QAAU,OAExE,yBACIrH,UAAU,qBACV9D,GAAE,uBAAkByL,GACpBC,aAAeX,EAAMY,QAAUF,EAAS,EAAIV,EAAMU,GAAQJ,SAAW,UAHzE,UAIQ,wBAAQjI,MAAM,UAAUwI,UAAQ,EAAhC,uBACA,wBAAQxI,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,wBAELyI,OAAOC,SAASC,KAAKC,SAAS,gBAGnB,KAFV,+BACI,mBAAGlI,UAAU,cAAcwH,cAAY,OAAOtL,GAAIyL,EAAQ9G,QA3BpD,SAACsB,GACnB6E,EAAO7E,EAAEC,OAAOlG,aCmOTiM,EAnOI,SAAC,GAAwC,IAAtCvB,EAAqC,EAArCA,OAAQwB,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,WAAYnM,EAAS,EAATA,GAE1CuD,EAAUC,cAFyC,EAInBjB,mBAASmI,GAJU,mBAIhD0B,EAJgD,KAIpCC,EAJoC,OAMnB9J,oBAAS,GANU,mBAMhD+J,EANgD,KAMpCC,EANoC,OAQzBhK,mBAAS,IARgB,mBAQhDiK,EARgD,KAQvCC,EARuC,OAUvBlK,mBAAS,IAVc,mBAUhDmK,EAVgD,KAUtCC,EAVsC,OAY/BpK,oBAAS,GAZsB,mBAYhDuC,EAZgD,KAY1CiB,EAZ0C,OAcvBxD,mBAAS,MAdc,mBAchDqK,EAdgD,KActCC,EAdsC,KAkBvD9J,qBAAU,WACN8I,OAAOC,SAASC,KAAKC,SAAS,gBAAkBO,GAAc,GAAQA,GAAc,KACrF,IAGHxJ,qBAAU,WACFuJ,GACA,sBAAC,4BAAAvE,EAAA,+EAE4BjI,EAAIK,QAAQH,GAFxC,OAEa0K,EAFb,OAGO2B,EAAc3B,EAAO/K,MAH5B,gDAImBqC,QAAQgD,MAAR,MAJnB,wDAAD,KAOL,CAACsH,IAGJvJ,qBAAU,WACN,IAAI+J,EAAU,YAAON,GACjB9B,IAAW5F,IACXsH,EAAWpB,UAAU+B,SAAQ,SAAC9B,EAAM+B,GAChCF,EAAWjJ,KACP,cAAC,EAAD,CAEI4H,OAAQuB,EACRjC,MAAOL,EAAOM,UACdF,OAAQmC,GAHHD,OAOjBP,EAAWK,MAEjB,IAGF/J,qBAAU,WACN,GAAiB,OAAb6J,EAAkB,CAClB,IAAM1K,EAAasK,EAAQU,QAAO,SAAAjC,GAAI,OAAIA,EAAKkC,MAAQP,KACjDQ,EAAgBhB,EAKtB,OAHAgB,EAAcpC,UAAUqC,OAAOT,EAAU,GACzCP,EAAce,GAEPZ,EAAQb,OAAS,EAAIc,EAAWvK,GAAc,QAE1D,CAAC0K,IAGJ,IAAMU,EAAe,SAACrH,GAClBoG,EAAc,2BACPD,GADM,kBAERnG,EAAEC,OAAOrF,KAAOoF,EAAEC,OAAO9C,UAiB5B6J,EAAkB,SAACjN,GACrB6M,EAAY7M,IAIVuN,EAAY,uCAAG,sBAAAxF,EAAA,+EAEPjI,EAAIS,eAAe6L,EAAWlJ,IAAKkJ,GAF5B,sDAGDpK,QAAQC,IAAR,MAHC,wDAAH,qDAkDZ2F,EAAa,kBAAM7B,GAAQ,IAGjC,OACI,qCACI,iCACMmG,EAAS,KACP,qCACI,6BACMxB,EAAO8C,WAGb,qBAAK1J,UAAU,aAAf,SACI,uBACIM,KAAK,OACLN,UAAU,eACV9D,GAAG,eACHa,KAAK,WACLuC,MAAQgJ,EAAWN,SACnB9F,SAAWsH,SAM3B,sBAAKxJ,UAAU,aAAf,UACI,6BACI,uCAEJ,qBAAKA,UAAU,iBAAf,SACI,0BACIA,UAAU,eACV9D,GAAG,YACHyN,KAAK,IACLrK,MAAQsH,EAAS0B,EAAWsB,aAASC,EACrC3H,SAAUsH,EACVzM,KAAK,iBAKjB,sBAAKiD,UAAU,aAAf,UACI,4BACI,iDAEJ,uBACIM,KAAK,QACLN,UAAU,eACV9D,GAAG,gBACHqG,YAAY,oBACZxF,KAAK,UACLuC,MAAQsH,EAAS0B,EAAWwB,aAAUD,EACtC3H,SAAWsH,OAInB,qBAAKxJ,UAAU,aAAf,SACI,gCACI,uBAAOqC,QAAQ,cAAf,yBACEqG,EAAQhC,KAAI,SAAAqD,GAAK,OAAKA,UAIhC,+BACI,8BACI,mBAAG/J,UAAU,aAAawH,cAAY,OAAO3G,QApI5C,WACb8H,EAAW,GAAD,mBAAKD,GAAL,CACN,cAAC,EAAD,CAEIf,OAASe,EAAQb,OACjBZ,MAAQuB,EAAa,GAAKF,EAAWpB,UACrCF,OAASmC,GAHHT,EAAQb,cAgId,kBAMJ,wBAAQvH,KAAK,SAAShB,MAAO,SAAUU,UAAU,qBAAqBa,QApF1D,SAACmJ,GACrBA,EAAMxH,iBApBF8F,IAAcA,EAAWpB,UAAY,IAEzCwB,EAAQO,SAAQ,SAAC9B,EAAK+B,GAClB,IAbSe,EAaHC,EAAYxH,SAASC,eAAT,iBAAkCuG,IAAK5J,MACnD6K,EAAWzH,SAASC,eAAT,uBAAwCuG,IAAK5J,MACxD8K,EAAY9B,EAEA,KAAd4B,GAAiC,YAAbC,IAEpBC,EAAUlD,UAAUnH,KAAK,CACrBwH,SAAU4C,EACV9C,SArBC4C,EAqBgBC,EAlB7BD,EAAMA,EAAII,cAAcC,OAFT,2FAIF9F,KAAKyF,GAAOA,EAAIM,QAAQ,0BAA2B,IAAMN,KAkB9D1B,EAAc,2BAAKD,GAAN,IAAkB8B,mBASvCX,IACA9J,aAAa8C,QAAQ,KAArB,UAA8BvG,IAC9B2M,EAAY,GAAD,OAAIP,EAAWoB,SAAf,2BACX5F,KA8EQ,qBAMJ,cAAC,EAAD,CACI9C,KAAOA,EACPC,YAlFQ,WAChBgB,GAAQ,GACRuG,EAAa/I,EAAQM,KAAR,oBAA0B7D,IAAQmM,KAiFvCnH,MAAQ0H,EACRzH,OAAQ,Q,QC1LTqJ,EAtCU,SAACC,GAAU,MAEEhM,mBAAS,SAFX,mBAEzBiM,EAFyB,KAEdC,EAFc,KAUhC,OACI,qCACI,cAAC,IAAD,IACA,cAAC,IAAD,CACIC,QAAS,CAAC,QAAS,SAAU,WAAY,aACzCC,WAAY,CAAEC,cAAe,cAAeC,kBAAmB,cAC/DC,aAAc,QACdC,UAAYlG,YACZmG,aAAenG,WACfoG,WAAaV,EAAMtJ,MACnBlB,MAAO,CACHmL,MAAO,QACPC,OAAQ,OACRC,MAAO,QACPpL,gBAAiB,UACjBqL,aAAc,MACdC,OAAQ,OACR7G,OAAQ,SACRE,QAAS6F,GAEbe,UAAW,EACXC,UA3BM,SAAAC,GACdlB,EAAMiB,UAAUC,GAChBhB,EAAa,SA0BLiB,UAxBO,SAAAC,GAAG,OAAI3N,QAAQgD,MAAM2K,UCkE7BC,EAvEA,SAAC,GAAgD,IAA/ClF,EAA8C,EAA9CA,OAAQ9H,EAAsC,EAAtCA,UAAW5C,EAA2B,EAA3BA,GAAI2K,EAAuB,EAAvBA,KAAMwB,EAAiB,EAAjBA,WACpC0D,EAASpM,aAAaC,QAAQ,MAC9BqK,EAAMlC,OAAOC,SAASZ,KACtBxJ,EAASqM,EAAI+B,UAAU/B,EAAIgC,YAAY,KAAM,GAQ7CC,EAAkB,WACtB,GAAItF,EAAOM,UAAUW,OAAS,EAAK,OAAQ,cAAC,EAAD,CAAajB,OAASA,EAAS9H,UAAWA,EAAW+H,KAAOA,KAUzG,OAAO/H,EAAa,6CAChB,sBAAKkB,UAAU,+CAAf,UAEI,sBAAKA,UAAU,qBAAf,UAnBU,WAChB,GAAI4G,EAAOuF,QAAW,OAAS,qBAAKhM,IAAI,YAAYH,UAAU,sBAAsBI,IAAMwG,EAAOuF,UAmBrFC,GACAvF,EAAO,cAAC,EAAD,CAAmB1F,MAAM,aAAauK,UAXhC,SAACC,GACxB3P,EAAIS,eAAemK,EAAOxH,IAAK,CAAE+M,QAASR,EAAQU,KAAKpC,MACvDlC,OAAOC,SAASsE,YAS4E,QAGxF,qBAAKtM,UAAU,mCAAf,SACM6G,EAAO,cAAC,EAAD,CAAYD,OAASA,EAAS1K,GAAKA,EAAKgQ,gBAAmBA,IAAoB7D,WAAaA,IAErG,qCACI,+BACKzB,EAAO8C,SACFqC,IAAWnO,EAAS,KAClB,+BACA,mBAAGoC,UAAU,eAAewH,cAAY,OAAO3G,QAAUwH,SAIrE,6BACKzB,EAAOoB,WAEZ,6BACI,uCAGJ,qBAAKhI,UAAU,iBAAf,SACI,4BAAI4G,EAAOgD,YAGf,8BACI,8CACA,uBACA,mBAAGxC,KAAM,UAAYR,EAAOkD,QAA5B,SACMlD,EAAOkD,aAKnBoC,aChBHK,EA/CE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAEF/N,mBAAU,IAFR,mBAEvBmI,EAFuB,KAEf6F,EAFe,OAIAhO,mBAAS,IAJT,mBAIvBgI,EAJuB,KAIdiG,EAJc,OAMIjO,oBAAS,GANb,mBAMvBK,EANuB,KAMZC,EANY,OAQNN,oBAAS,GARH,mBAQvBoI,EARuB,KAQjB8F,EARiB,KAW9B1N,qBAAU,WACR,sBAAC,8BAAAgF,EAAA,+EAE0BjI,EAAIK,QAAQmQ,EAAMI,OAAO1Q,IAFnD,cAEW0K,EAFX,gBAG2B5K,EAAI2B,gBAAgB6O,EAAMI,OAAO1Q,IAH5D,OAGWuK,EAHX,OAIKgG,EAAU7F,EAAO/K,MACjB6Q,EAAWjG,EAAQ5K,MACnBkD,GAAa,GANlB,kDAOmBb,QAAQgD,MAAR,MAPnB,yDAAD,KASC,CAACsL,EAAMI,OAAO1Q,GAAI2K,IAQrB,OACE,sBAAK7G,UAAU,iDAAf,UACE,cAAC,EAAD,CAAQ4G,OAASA,EAAS9H,UAAYA,EAAY5C,GAAIsQ,EAAMI,OAAO1Q,GAAI2K,KAAOA,EAAOwB,WARtE,WAEVsE,GAAP9F,MAQIA,EAAO,KACP,sBAAK7G,UAAU,+BAAf,UACE,6BACE,iDAEF,cAAC,EAAD,CAAcyG,QAASA,EAAS3H,UAAWA,EAAW5C,GAAIsQ,EAAMI,OAAO1Q,QAI3E,2BC0CS2Q,EAlFG,SAAC,GAAa,IAAZxH,EAAW,EAAXA,MAAW,EACV7F,qBAAWnB,GAAzBnC,EADwB,EACxBA,GAAI0C,EADoB,EACpBA,OADoB,EAEOH,oBAAS,GAFhB,mBAExBqO,EAFwB,KAEXC,EAFW,KAGzBC,EAAgB,wBAAoB9Q,GAHX,EAICuC,mBAAS,CACrC,UAAa4G,EAAMtI,KACnB,aAAgB,CAACsI,EAAM2C,SAASiF,SAAW,GAAI5H,EAAM2C,SAASkF,KAAO,KAAO7H,EAAM2C,SAASmF,MAAO,mBANvE,mBAIxBC,EAJwB,KAIdC,EAJc,KASjBC,EAAa,uCAAG,sBAAArJ,EAAA,uEAEiB4F,IAA3BxE,EAAM2C,SAASiF,QAFL,uBAGVI,EAAY,CACZ,UAAahI,EAAMtI,KACnB,aAAgB,CAAC,GAAIsI,EAAM2C,SAASkF,KAAO,KAAO7H,EAAM2C,SAASmF,MAAO,mBAExEjP,QAAQC,IAAIiP,GAPF,SAQJpR,EAAIkB,kBAAkBmI,EAAMF,UAAWiI,GARnC,qCAWVC,EAAY,CACZ,UAAahI,EAAMtI,KACnB,aAAgB,CAACsI,EAAM2C,SAASiF,QAAS5H,EAAM2C,SAASkF,KAAO,KAAQ7H,EAAM2C,SAASmF,MAAO,mBAbnF,UAeJnR,EAAIkB,kBAAkBmI,EAAMF,UAAWiI,GAfnC,0DAkBdlP,QAAQC,IAAR,MAlBc,0DAAH,qDA2CvB,OArBJc,qBAAU,YACS,uCAAG,gCAAAgF,EAAA,+EAEajI,EAAIgB,YAFjB,OAEJuQ,EAFI,OAGJC,EAAUD,EAAS1R,KACnB4R,EAAcD,EAAQ9G,KAAI,SAAArB,GAAK,OAAIA,EAAMF,aACvBsI,EAAY/G,KAAI,SAAArB,GAAK,OAAIA,KAC5B6C,SAAS7C,EAAMtI,OAChCgQ,GAAe,GAPT,kDAWV7O,QAAQC,IAAR,MAXU,0DAAH,qDAcfuP,KAED,CAACrI,EAAMtI,OAIC+P,EAAc,KAEjB,sBAAK9M,UAAU,qEAAf,UACA,sBAAKA,UAAU,kCAAf,UACA,6BAAI,4BAAIqF,EAAMtI,SACd,sBAAKiD,UAAU,qCAAf,UACA,cAAC,IAAD,CAAQkG,cAAe,EAAGE,YAAY,gCAAgCC,UAAQ,EAACC,WAAW,gCAC1F,oBAAItG,UAAU,MAAd,2BAECpB,EAAO,cAAC,IAAD,CAAMgC,GAAIoM,EAAV,SACR,wBAAQnM,QAASyM,EAAjB,0BACQ,KACR,mBAAGtN,UAAU,MAAb,SAAoBqF,EAAM2C,SAASiF,UACnC,mBAAGjN,UAAU,MAAb,SAAoBqF,EAAM2C,SAASkF,KAAO,KAAO7H,EAAM2C,SAASmF,WAEhE,uBAAOnN,UAAU,kFAAjB,SACA,gCACI,+BACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,wBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,+BChEG2N,EAZE,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,UAEf,OAFyC,EAAf9O,UAEN,GAEhB,qBAAKkB,UAAU,+BAAf,SACC4N,EAAUlH,KAAI,SAAArB,GAAK,OAAK,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMnJ,UCoCxC2R,EAtCS,SAAC,GAAc,IAAb3I,EAAY,EAAZA,OAAY,EAEEzG,mBAAU,IAFZ,mBAE3BqP,EAF2B,KAEfC,EAFe,OAGFtP,qBAHE,mBAG3BuP,EAH2B,KAGjBC,EAHiB,KAK7BzI,EAAY,IAAIC,KAAKC,eAAe,QAAS,CAChDC,KAAM,UACNC,MAAO,OACPC,IAAK,YAcP,OAXA5G,qBAAU,YACa,uCAAG,8BAAAgF,EAAA,sEACCjI,EAAIK,QAAQ6I,EAAOgJ,QADpB,OACd5I,EADc,OAEd6I,EAAe7I,EAAOzJ,KAC5BqC,QAAQC,IAAIgQ,GACZF,EAAYE,EAAa/O,KACzB2O,EAAcI,EAAazE,UALP,2CAAH,qDAOnB0E,KACC,CAAClJ,EAAOgJ,SAKX,mCACE,+BACG,6BAAM1I,EAAUM,OAAOC,KAAKC,MAAMd,EAAOe,cACzC,6BAAI,cAAC,IAAD,CAAMrF,GAAE,oBAAeoN,GAAvB,SAAoCF,MACxC,6BAAI,cAAC,IAAD,CAAQ5H,cAAehB,EAAOiB,OAAQC,YAAY,gCAAgCC,UAAQ,EAACC,WAAW,kCAC1G,6BAAKpB,EAAOqB,mBCTR8H,EAzBW,SAAC,GAA0B,IAAzB5H,EAAwB,EAAxBA,QAExB,OAFgD,EAAf3H,UAEb,6CAGhB,qBAAKkB,UAAU,mBAAf,SACA,wBAAOA,UAAU,6BAAjB,UACA,gCACI,+BACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,yBAGN,gCACKyG,EAAQC,KAAI,SAAAxB,GAAM,OAAK,cAAC,EAAD,CAAiBA,OAAQA,GAAaA,EAAO9F,gBCqDhEkP,EAhED,SAAC,GAAgB,IAAff,EAAc,EAAdA,SACR3O,EAAQY,qBAAWnB,GAAnBO,OACC1C,EAAMsD,qBAAWnB,GAAjBnC,GACD8Q,EAAgB,wBAAoB9Q,GAHd,EAIEuC,mBAAS,IAJX,mBAIrBgI,EAJqB,KAIZiG,EAJY,OAKcjO,mBAAS,IALvB,mBAKrB8P,EALqB,KAKNC,EALM,KA8B5B,OAvBAvP,qBAAU,YAEQ,uCAAG,kCAAAgF,EAAA,+EAESjI,EAAI6B,iBAAiB0P,EAASnO,KAFvC,OAOb,IALMqH,EAFO,OAGPgI,EAAgBhI,EAAQ5K,KACxB6S,EAAa,GACnBhC,EAAW+B,GAENvF,EAAI,EAAG,EAAIuF,EAAc5G,OAAQqB,IACpCwF,EAAW3O,KAAK0O,EAAcvF,GAAG/C,QACjCqI,EAAkBE,EAAWC,QAAO,SAAC1K,EAAG2K,GAAJ,OAAW3K,EAAI2K,IAAG,GAAIF,EAAW7G,QAT1D,kDAaf3J,QAAQC,IAAR,MAbe,0DAAH,qDAiBlB0Q,KAEE,CAACtB,EAASnO,WAEkByK,IAA1B0D,EAASuB,aACJ,KAML,sBAAK9O,UAAU,uFAAf,UACM,sBAAKA,UAAU,gBAAf,UACA,oBAAIA,UAAU,MAAd,SAAoB,4BAAIuN,EAASpI,cACjC,sBAAKnF,UAAU,8BAAf,UACA,cAAC,IAAD,CAAQkG,cAAeqI,EAAenI,YAAY,gCAAgCC,UAAQ,EAACC,WAAW,gCACtG,+BAAKG,EAAQoB,OAAb,iBAECjJ,EAAO,cAAC,IAAD,CAAMgC,GAAIoM,EAAV,SACR,kDACQ,KACR,oBAAIhN,UAAU,MAAd,SAAoB,2CACpB,sBAAKA,UAAU,cAAf,UACA,mBAAGA,UAAU,MAAb,SAAoBuN,EAASuB,aAAa,KAC1C,mBAAG9O,UAAU,MAAb,SAAoBuN,EAASuB,aAAa,KAC1C,mBAAG9O,UAAU,MAAb,SAAoBuN,EAASuB,aAAa,WAG1C,cAAC,EAAD,CAAmBrI,QAASA,QCmDzBsI,EAxGG,WAAM,MAEIvP,qBAAWnB,GAA9BO,EAFe,EAEfA,OAAQ1C,EAFO,EAEPA,GAAI8C,EAFG,EAEHA,MAFG,EAGUP,mBAAS,CAAC,KAHpB,mBAGf8O,EAHe,KAGLyB,EAHK,OAIYvQ,oBAAS,GAJrB,mBAIfK,EAJe,KAIJmQ,EAJI,OAKMxQ,mBAAS,CAAC0G,UAAW,GAAI+H,KAAM,GAAIgC,OAAQ,KALjD,mBAKfC,EALe,KAKPC,EALO,OAMW3Q,mBAAS,IANpB,mBAMfmP,EANe,KAMJyB,EANI,KAOtBrQ,EAAMW,aAAaC,QAAQ,OAE3B,IAOM0P,EAAc,uCAAG,8BAAArL,EAAA,sEAEbsL,EAA0B,SAAdJ,EAAOD,OAFN,gOAIE/S,IAAM,GAAD,OAJP,uNAIO,0BAAyBgT,EAAOjC,KAAhC,mBAA+CqC,IAJtD,OAIbjK,EAJa,OAKnB+J,EAAY/J,EAAOzJ,KAAKoC,SAASuR,QACjCP,GAAa,GANM,kDAOL/Q,QAAQgD,MAAR,MAPK,0DAAH,qDAWduO,EAAW,uCAAG,oCAAAxL,EAAA,sEAEMjI,EAAIgB,YAFV,OAShB,IAPI0S,EAFY,OAGZC,EAAYD,EAAU7T,KACtB+T,EAAgB,GAChBC,EAAiB,GAIhB3G,EAAE,EAAGA,EAAIyG,EAAU9H,OAAQqB,MAG8F,IAAxHyG,EAAUzG,GAAG/D,UAAUoF,QAAQ,MAAO,IAAIF,cAAcnC,SAASiH,EAAOhK,UAAUoF,QAAQ,MAAO,IAAIF,gBAU/FsF,EAAUzG,GAAG/D,UAAUoF,QAAQ,MAAO,IAAIF,cAAcnC,SAASiH,EAAOhK,UAAUoF,QAAQ,MAAO,IAAIF,mBARgB,IAAzHsF,EAAUzG,GAAG4F,aAAa,GAAGvE,QAAQ,MAAO,IAAIF,cAAcnC,SAASiH,EAAOjC,KAAK3C,QAAQ,MAAO,IAAIF,eACxGuF,EAAc7P,KAAK4P,EAAUzG,IAG7B2G,EAAe9P,KAAK4P,EAAUzG,KAetC8F,EAAYY,GAjCM,2CAAH,qDAsCjB,SAASpG,EAAaQ,GAEpB,IAAM1K,EAAQ0K,EAAM5H,OAAO9C,MAE3B8P,EAAU,2BACLD,GADI,kBAENnF,EAAM5H,OAAOrF,KAAOuC,KAKzB,OAEE,qBAAKU,UAAU,uBAAf,SACE,sBAAKA,UAAU,+DAAf,UACA,6BAAI,qDAGJ,iCACE,uBAAOM,KAAK,OAAOiC,YAAY,WAAWxF,KAAM,YAAauC,MAAO6P,EAAOhK,UAAWnF,UAAU,wBAAwBkC,SAAUsH,IAClI,uBAAOlJ,KAAK,OAAOiC,YAAY,kBAAkBxF,KAAM,OAAQuC,MAAO6P,EAAOjC,KAAMlN,UAAU,wBAAwBkC,SAAUsH,IAC/H,uBAAOlJ,KAAK,SAASiC,YAAY,mBAAmBxF,KAAM,SAAUuC,MAAO6P,EAAOD,OAAQlP,UAAU,yBAAyBkC,SAAUsH,IACvI,wBAAQ3I,QA9EU,SAACsB,GACvBA,EAAEK,iBACF8M,IACAG,KA2EsCzP,UAAU,6BAA5C,2BACCpB,EAAO,cAAC,IAAD,CAAMgC,GAAE,uBAAkB1E,GAA1B,SACR,wBAAQ8D,UAAU,iBAAlB,4BACQ,QAIV,sBAAKA,UAAU,qBAAf,UACCuN,EAAS7G,KAAI,SAAArB,GAAK,OAAK,cAAC,EAAD,CAAOkI,SAAUlI,OACzC,cAAC,EAAD,CAAUuI,UAAWA,EAAW9O,UAAWA,aCtBlCgR,EA9EK,WAAO,IAAD,EACJrR,mBAAS,IAApBwO,EADe,sBAEkBxO,mBAAS,IAF3B,mBAEfsR,EAFe,KAEDC,EAFC,OAGUvR,mBAAS,CACjC,UAAasR,EACb,aAAgB9C,IALF,mBAGfG,EAHe,KAGLC,EAHK,OAQU5O,mBAAS,IARnB,mBAQfmK,EARe,KAQLC,EARK,OAUEpK,oBAAS,GAVX,mBAUfuC,EAVe,KAUTiB,EAVS,KAWlBxC,EAAUC,cAYRuQ,EAAY,uCAAG,WAAOjG,GAAP,SAAA/F,EAAA,6DACjB+F,EAAMxH,iBADW,SAGb0N,IAHa,SAINlU,EAAIkB,kBAAkBkQ,EAASjI,UAAWiI,GAJpC,OAKbvE,EAAYuE,EAASjI,UAAY,gBAdhBlD,GAAQ,GASZ,gDASb/D,QAAQC,IAAR,MATa,yDAAH,sDAmBZ+R,EAAgB,WAClB,IAAIpB,EAAe7B,EACnBA,EAAQlN,KACJ2C,SAASC,eAAe,KAAKrD,MAC7BoD,SAASC,eAAe,KAAKrD,MAC7BoD,SAASC,eAAe,KAAKrD,OAEjC+N,EAAY,2BAAID,GAAL,IAAe0B,mBAG9B,OACA,qBAAK9O,UAAU,oEAAf,SACA,sBAAKA,UAAU,kBAAf,UACA,oBAAIA,UAAU,cAAd,iCACA,iCACI,sBAAKA,UAAU,gCAAf,UACI,uBAAOqC,QAAQ,YAAf,yBACA,uBAAO/B,KAAK,OAAOpE,GAAG,YAAYa,KAAK,YAAYmF,SAvBnC,SAAC8H,GACrB,IAAM1K,EAAQ0K,EAAM5H,OAAO9C,MAC3B0Q,EAAgB1Q,KArBA,SAAC0K,GACjB,IAAM5H,EAAS4H,EAAM5H,OAAOrF,KACtBuC,EAAQ0K,EAAM5H,OAAO9C,MAC3B+N,EAAY,2BAAID,GAAL,kBAAgBhL,EAAS9C,WAyCpC,sBAAKU,UAAU,aAAf,UACA,uBAAOqC,QAAQ,eAAf,4BACA,sBAAKrC,UAAU,qBAAf,UACA,uBAAOM,KAAK,OAAOpE,GAAG,IAAIa,KAAK,IAAIwF,YAAY,qBAC/C,uBAAOjC,KAAK,OAAOpE,GAAG,IAAIa,KAAK,IAAIwF,YAAY,qBAC/C,uBAAOjC,KAAK,OAAOpE,GAAG,IAAIa,KAAK,IAAIwF,YAAY,sBAG/C,wBAAQjC,KAAK,SAAShB,MAAO,SAAUU,UAAU,qBAAqBa,QAASoP,EAA/E,uBAEI,cAAC,EAAD,CAAOjP,KAAMA,EAAMC,YA1DP,WAAQgB,GAAQ,GAAQxC,EAAQM,KAAK,eA0DJmB,MAAO0H,EAAUzH,OAAO,UChElEgP,EATO,SAAC,GAAa,IAAZ9K,EAAW,EAAXA,MAEpB,OACI,mCACA,wBAAQ/F,MAAO+F,EAAMjG,IAArB,SAA2BiG,EAAMF,eCqF1BiL,EArFM,WAAM,MAEO3R,mBAAS,IAFhB,mBAElBmK,EAFkB,KAERC,EAFQ,OAIDpK,oBAAS,GAJR,mBAIlBuC,EAJkB,KAIZiB,EAJY,OAKPzC,qBAAWnB,GAAtBnC,EALkB,EAKlBA,IACP8C,EANyB,EAKdA,OACLW,aAAaC,QAAQ,OAC3B,IAPyB,EAUWnB,mBAAS,IAVpB,mBAUhBkR,EAVgB,KAULU,EAVK,OAWe5R,mBAAS,CAC3C,MAAS,GACT,OAAU,GACV,WAAc,KAdK,mBAWhB6R,EAXgB,KAWHC,EAXG,KAgBnB9Q,EAAUC,cAEdT,qBAAU,YACW,uCAAG,8BAAAgF,EAAA,sEACGjI,EAAIgB,YADP,OACZsI,EADY,YAGAuE,KADZ8F,EAAYrK,EAAOzJ,OAEvBwU,EAAa,CAAC,CAAClL,UAAU,IAAK,CAACA,UAAU,MACzCjH,QAAQC,IAAI,iBAGZkS,EAAaV,GARG,2CAAH,qDAWjBF,KACC,IAEL,IAAMjS,EAAe,SAACwM,GAAW,IAAD,EACtB5H,EAAS4H,EAAM5H,OAAOrF,KACtBuC,EAAQ0K,EAAM5H,OAAO9C,MAC3BiR,EAAe,2BAAID,GAAL,uBAAmBlO,EAAS9C,GAA5B,uBAA4CkR,SAASlR,IAArD,MAGZmR,EAAY,uCAAG,WAAOzG,GAAP,SAAA/F,EAAA,6DACjB+F,EAAMxH,iBADW,kBAGNxG,EAAIwB,aAAatB,EAAIoU,GAHf,OAIbzH,EAAY,mBAnCG5G,GAAQ,GA+BV,gDAOb/D,QAAQC,IAAR,MAPa,yDAAH,sDAWlB,OACA,qBAAK6B,UAAU,oEAAf,SACA,sBAAKA,UAAU,kBAAf,UACA,oBAAIA,UAAU,cAAd,iCACA,iCACI,sBAAKA,UAAU,gCAAf,UACI,uBAAOqC,QAAQ,YAAf,yBACA,yBAAQrC,UAAU,cAAc9D,GAAG,QAAQa,KAAK,QAAQmF,SAAU1E,EAAlE,UACA,kDACCmS,EAAUjJ,KAAI,SAAArB,GAAK,OAAK,cAAC,EAAD,CAA+BA,MAAOA,GAAlBA,EAAMjG,cAGvD,sBAAKY,UAAU,aAAf,UACA,uBAAOqC,QAAQ,cAAf,qBACA,0BAAUrC,UAAU,eAAe9D,GAAG,aAAaa,KAAK,aAAa2T,UAAW,IAAKxO,SAAU1E,EAAcmM,KAAK,SAElH,sBAAK3J,UAAU,gCAAf,UACA,uBAAOqC,QAAQ,cAAf,+BACA,yBAAQnG,GAAG,SAASa,KAAK,SAASmF,SAAU1E,EAA5C,UACI,wBAAQ8B,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,qBAGJ,wBAAQgB,KAAK,SAAShB,MAAO,SAAUuB,QAAS4P,EAAczQ,UAAU,qBAAxE,uBAEA,cAAC,EAAD,CAAOgB,KAAMA,EAAMC,YAvEL,WAAQgB,GAAQ,GAAQxC,EAAQM,KAAR,qBAA2B7D,KAuEpBgF,MAAO0H,EAAUzH,OAAO,UChC9DwP,EA/CM,SAAC,GAAe,IAAbnE,EAAY,EAAZA,MAAY,EAEJ/N,qBAFI,mBAEzBmI,EAFyB,KAEjB6F,EAFiB,OAIEhO,mBAAS,QAJX,mBAIzBwE,EAJyB,KAIdC,EAJc,KAOhCjE,qBAAU,YACW,uCAAG,8BAAAgF,EAAA,sEACKjI,EAAIK,QAAQmQ,EAAMI,OAAO1Q,IAD9B,OACVoJ,EADU,OAEVsL,EAAatL,EAAOzJ,KAC1B4Q,EAAUmE,GAHM,2CAAH,qDAKjBxC,KACD,CAAC5B,EAAMI,OAAO1Q,KAajB,OACI,qBAAK8D,UAAU,oEAAf,SACI,sBAAKA,UAAU,kBAAf,UAEI,oBAAIA,UAAU,cAAd,wCAIA,cAAC,EAAD,CAAkB0L,UAlBH,SAACC,GACxBc,EAAU,2BACH7F,GADE,IAELuF,QAASR,EAAQU,KAAKpC,OAE1BjO,EAAIS,eAAemK,EAAOxH,IAAK,CAAE+M,QAASR,EAAQU,KAAKpC,MACvD/G,EAAa,UAY8C/B,MAAM,cACzD,oBAAIlB,MAAO,CAAEmL,MAAO,QAASvG,QAAS5B,GAAtC,6BAIA,cAAC,EAAD,CAAYmF,QAAQ,EAAMlM,GAAKsQ,EAAMI,OAAO1Q,W,sBC1B7C2U,GAhBI,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCC,UAAyBC,EAAU,6BAC7CpS,EAAWY,qBAAWnB,GAAtBO,OACP,OAEI,aADA,CACC,IAAD,2BAAWoS,GAAX,IAAiBhM,OAAQ,SAAAyF,GACrB,OAAI7L,EAMG,cAACkS,EAAD,eAAerG,IAJX,cAAC,IAAD,CAAU7J,GAAI,CAACqQ,SAAU,IAChB9D,MAAO,CAAC+D,KAAMzG,EAAMzC,kBCSrC6I,GAjBI,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCC,UAAyBC,EAAU,+BAC/BxR,qBAAWnB,GAAzBO,EAD6C,EAC7CA,OAAQ1C,EADqC,EACrCA,GACTiV,EAAQ,oBAAgBjV,GAC9B,OAEI,aADA,CACC,IAAD,2BAAW8U,GAAX,IAAiBhM,OAAQ,SAAAyF,GACrB,OAAG7L,EAEQ,cAAC,IAAD,CAAUgC,GAAI,CAACqQ,SAAUE,EAChBhE,MAAO,CAAC+D,KAAMzG,EAAMzC,aAGjC,cAAC8I,EAAD,eAAerG,SC0BnB2G,OAxBf,WAAgB,IAAD,EACuB3S,qBADvB,mBACNC,EADM,KACOC,EADP,OAEaF,oBAAS,GAFtB,mBAENG,EAFM,KAEEC,EAFF,OAGKJ,qBAHL,mBAGNvC,EAHM,KAGF8C,EAHE,KAKb,OACE,cAAC,EAAD,CAAcM,MAAQ,CAACZ,cAAaE,SAAQ1C,KAAI8C,QAAOL,iBAAgBE,aAAvE,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwS,KAAK,iBAAiBN,UAAWhC,IACxC,cAAC,IAAD,CAAOuC,OAAK,EAACD,KAAK,cAAcN,UAAWhC,IAC3C,cAACwC,GAAD,CAAeF,KAAK,IAAIC,OAAK,EAACP,UAAWjQ,IACzC,cAACyQ,GAAD,CAAeF,KAAK,SAASN,UAAWnP,IACxC,cAAC2P,GAAD,CAAeF,KAAK,gBAAgBN,UAAWnO,IAC/C,cAAC,GAAD,CAAYyO,KAAK,gBAAgBN,UAAWxE,IAC5C,cAAC,GAAD,CAAY8E,KAAK,oBAAoBN,UAAWX,IAChD,cAAC,GAAD,CAAYiB,KAAK,mBAAmBN,UAAWjB,IAC/C,cAAC,GAAD,CAAYuB,KAAK,oBAAoBN,UAAWJ,aCxBtCa,QACW,cAA7BzJ,OAAOC,SAASyJ,UAEe,UAA7B1J,OAAOC,SAASyJ,UAEhB1J,OAAOC,SAASyJ,SAASjF,MAAM,2DCTnCkF,IAAS1M,OAEL,cAAC,IAAM2M,WAAP,UACI,cAAC,GAAD,MAGNjP,SAASC,eAAe,SDiHpB,kBAAmBiP,WACrBA,UAAUC,cAAcC,MACrBrW,MAAK,SAACsW,GACLA,EAAaC,gBAEdC,OAAM,SAAC/Q,GACNhD,QAAQgD,MAAMA,EAAMiD,c","file":"static/js/main.f53e6cdf.chunk.js","sourcesContent":["// setting up authentication routes for user\n\nexport default  {\n    // log the user in and if fails return authentication false, and no user name\n    login: user =>{\n        return fetch('/api/dbRoutes/user/login', {\n            method: 'post',\n            body: JSON.stringify(user),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then (res => {  \n            if(res.status !== 401){\n                return res.json().then(data=>data)\n            } else{\n                return {isAuthenticated: false, user: {userName: ''}}\n            }\n    })},\n    // log out routes for user to return no user, auth false, and clear cookies all functionality in server\n    logout: () => {\n        return fetch('/api/dbRoutes/user/logout')\n        .then(res => res.json())\n        .then(data=> data)\n    },\n    // takes the JWT token in cookies and check if it is valid or not second step authentication\n    isAuthenticated: () => {\n        return fetch('/api/dbRoutes/user/authenticated')\n        .then(res=>{\n            if(res.status !== 401){\n                return res.json().then(data=>data)\n            } else{\n                return {isAuthenticated: false, user: {userName: ''}}\n            }\n        })\n    }\n}","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios';\n\nconst API = {\n    // GET BAND BY USER ID\n    getBandByUserId(id){\n        return axios.get(`/api/dbRoutes/user/${id}`)\n    },\n    // GET USER INFO BY ID\n    getBand(id){\n        return axios.get(`/api/dbRoutes/band/${id}`)\n    },\n    // CREATE NEW band\n    createBand(bandData){\n        return axios.post('/api/dbRoutes/band/', bandData)\n    },\n    // UPDATE Band INFO\n    updateBandData(id, bandData){\n        return axios.put(`/api/dbRoutes/band/${id}`, bandData)\n    },\n    // DELETE Band BY ID\n    deleteBand(id){\n        return axios.delete(`/api/dbRoutes/band/${id}`)\n    },\n    // GET VENUE BY ID\n    getVenueById(id){\n        return axios.get(`api/dbRoutes/venue/${id}`)\n    },\n    // GET VENUE BY NAME\n    getVenueByName(name){\n        return axios.get(`/api/dbRoutes/venue/name/${name}`)\n    },\n    // GET ALL VENUES\n    getVenues(){\n        return axios.get(`/api/dbRoutes/venue/`)\n    },\n    // CREATE NEW VENUE FROM FOURSQUARE SEARCH BY ID\n    createVenueById(id){\n        return axios.post(`/api/dbRoutes/venue/${id}`)\n    },\n    // CREATE NEW VENUE BY NAME IF NOT FOUND IN FOURSQUARE SEARCH\n    createVenueByName(name, venueData){\n        return axios.post(`/api/dbRoutes/venue/${name}`, venueData)\n    },\n    // POST NEW REVIEW TO VENUE\n    postVenueReview(reviewData){\n        return axios.put(`/api/dbRoutes/venue/${reviewData}`)\n    },\n    searchFourSquare(queryData){\n        return axios.post(`/api/fourSquareRoutes/${queryData}/`)\n    },\n    // create review by taking user input and band id\n    createReview(id, reviewData){\n        return axios.post(`/api/dbRoutes/reviews/${id}`, reviewData)\n    },\n    // for future reference to update a venue review from a band\n    updateReview(id){\n        return axios.put(`/api/dbRoutes/reviews/${id}`)\n    },\n    // for future use to delete review\n    deleteReview(id){\n        return axios.delete(`/api/dbRoutes/reviews/${id}`)\n    },\n    // gets all reviews from a specific band\n    getReviewByBand(bandId){\n        return axios.get(`/api/dbRoutes/reviews/band/${bandId}`)\n    },\n    // gets all reviews on a specific venue\n    getReviewByVenue(venueId){\n        return axios.get(`/api/dbRoutes/reviews/venue/${venueId}`)\n    },\n    // recaptcha verification with token\n    recaptchaUserVerify(responseToken){\n        return axios.post(`/api/userverify/${responseToken}`)\n            .then(response => {\n                return response ? console.log('You are human!') : console.log('No Robots allowed!');\n            }\n        )\n    },\n    deleteLink( data){\n        return axios.put('/api/dbRoutes/link', data)\n    }\n};\n\nexport default API;","import React, {createContext, useState, useEffect} from 'react';\nimport AuthServices from \"../Services/AuthorizationService\";\nimport API from \"../utils/API\"\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({children}) =>{\n    // global states for auth and current user\n    const [currentUser, setCurrentUser]= useState({});\n    const [isAuth, setIsAuth] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [id, setId]=useState()\n        // set initial state for context\n         useEffect(() => {\n             AuthServices.isAuthenticated().then(data => {\n                 setCurrentUser(data.user);\n                 setIsAuth(data.isAuthenticated);\n                 setIsLoading(true);\n\n                API.getBandByUserId(data)\n                .then(bandRes =>{\n                    setId(bandRes.data[0]._id)\n                });\n             })\n         }, [])\n\n    return (\n        <div>\n            {/* loading h1 if page hasn't rendered right away.*/}\n            {!isLoading?<h1>Loading</h1>: \n            <AuthContext.Provider value={{currentUser, setCurrentUser, isAuth,setIsAuth, setId, id}}>\n                {children}\n            </AuthContext.Provider>}\n        </div>\n    )\n}\nexport default AuthProvider","import React, {useContext, useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom'\nimport AuthServices from \"../Services/AuthorizationService\"\nimport {AuthContext} from '../Context/AuthorizationContext'\n\nconst NavBar = () => {\n  // setup globals to help with auth and also to help with routing\n  const {isAuth, setCurrentUser, setIsAuth, setId, id} = useContext(AuthContext)\n  const history = useHistory()\n  useEffect(() => {\n    setId(localStorage.getItem(\"id\"))\n  }, [])\n  // quick style variables for components \n  const imgstyle = {\n    maxHeight: \"70px\"\n  }\n  const headerstyle = {\n    backgroundColor: \"grey\"\n  }\n    \n    // creates log out functionality and calls the auth service logout route\n    const logoutButton= () =>{\n      AuthServices.logout()\n      .then(res => {\n        setCurrentUser(\"\")\n        setIsAuth(false)\n        setId(\"\")\n        localStorage.removeItem(\"id\")\n        history.push(\"/\")\n      })\n    }\n\n    // renders out nav buttons for non users\n    const navbarLogin = () =>{\n      return(\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\">\n              <h4 className=\"mx-2 navbutton\">Home</h4>\n            </Link><span className=\"sr-only\">(current)</span>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/venuepage\">\n            <h4 className=\"mx-2 navbutton\">Search Venues</h4>\n            </Link>\n          </li>\n        </ul>\n      )\n    }\n\n    //  renders out nav buttons for logged in users\n    const navbarUser = () =>{\n      return(    \n        <ul className=\"navbar-nav ml-auto\">\n          <li>\n            <Link to={`/bandpage/${id}`}>\n            <h4 className=\"mx-2 navbutton\">My Band Page</h4>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={`/venuepage/${id}`}>\n            <h4 className=\"mx-2 navbutton\">Search Venues</h4>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/\">\n            <h4 className=\"mx-2 navbutton\" onClick={logoutButton}>Sign Out</h4>\n            </Link>\n          </li>\n        </ul>\n      )\n    }\n    \n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={headerstyle}>\n        <img alt=\"ryder-logo\" src=\"./imgs/vinyl-homepage-logo.png\" style={imgstyle}></img>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n              {isAuth ? navbarUser() : navbarLogin()}\n         </div>\n      </nav>     \n     )\n}\n    \nexport default NavBar;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\n\nconst Home = () => {\n\n    return (\n\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n    <img className=\"img-fluid\" alt=\"ryder-logo\" src=\"./imgs/vinyl-homepage-logo2.png\"></img>\n    <h1 className=\"font-italic\">Better Your Artist Experience</h1>\n    <div className=\"d-flex justify-content-center mt-2\">\n    <Link to=\"/login\">\n    <button className=\"mx-2 homeaccountbutton\" >Log In</button>\n    </Link>\n    <Link to=\"/createartist\">\n    <button className=\"mx-2 homeaccountbutton\">Create Account</button>\n    </Link>\n    </div>\n    </div>\n    \n     )\n}\n    \nexport default Home;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nconst ModalAlert = ({ show, handleClose, error, title }) => {\n\n    // Render modal when book is saved\n    return (\n        <Modal show={ show } onHide={ handleClose }>\n            <Modal.Header>\n                <Modal.Title>\n                    { title ? 'Success!' : 'Oh No!' }\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <strong>{ error }</strong>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant='secondary' onClick={ handleClose }>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default ModalAlert;","import React, {useContext, useState} from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {AuthContext} from '../Context/AuthorizationContext';\nimport AuthServices from '../Services/AuthorizationService'\nimport API from '../utils/API';\nimport Modal from './Modal'\n\nconst LogIn = () => {\n    // useHistory hook for routing\n    let history = useHistory();\n\n    // State for username & pw\n    const [user, setUser]= useState({userName:\"\", password:\"\", id:\"\"});\n    // State for modal error message\n    const [errMsg, setErrMsg] = useState('');\n    // State for modal visibility\n    const [show, setShow] = useState(false);\n\n    // Context for authentication\n    const {setCurrentUser, setIsAuth, setId} = useContext(AuthContext);\n    \n    // Set state with user input\n    const onChange=(e)=>{\n        setUser({...user, [e.target.name]: e.target.value})\n    }\n\n    // Modal functions for closing and showing\n    const handleClose = () => setShow(false); \n    const handleShow = () => setShow(true);\n\n    // On submit verify authentication and send the user to their band page. On fail display modal and reset input fields\n    const onSubmit = e =>{\n        e.preventDefault();\n        AuthServices.login(user)\n        .then(res =>{\n            if(res.isAuthenticated){\n                setCurrentUser(res.userName)\n                setIsAuth(res.isAuthenticated)\n                API.getBandByUserId(res.id)\n                .then(bandRes =>{\n                    setId(bandRes.data[0]._id)\n                    localStorage.setItem(\"id\", `${bandRes.data[0]._id}`)\n                    history.push(`/bandpage/${bandRes.data[0]._id}`)\n                });\n            } else {\n                document.getElementById('passwordInput').value = '';\n                document.getElementById('emailInput').value = '';\n                setErrMsg('Wrong username or password');\n                handleShow();\n            }\n        });\n    }    \n\n    // Render login form\n    return (\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n\n            <img className=\"img-fluid\" alt=\"ryder-logo\" src=\"./imgs/vinyl-homepage-logo.png\" />\n            <h1 className=\"font-italic\">\n                Better Your Artist Experience\n            </h1>\n            \n            <div className=\"d-flex justify-content-center mt-4\">\n                <form className=\"formcontent p-2\">\n                    <div className=\"form-group \">\n                        <label htmlFor=\"emailInput\">\n                            Email address\n                        </label>\n                        <input type=\"email\" onChange={onChange} name='userName' className=\"form-control\" id=\"emailInput\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"passwordInput\">\n                            Password\n                        </label>\n                        <input type=\"password\" onChange={onChange} name=\"password\" className=\"form-control\" id=\"passwordInput\" placeholder=\"Password\" />\n                    </div>\n\n                    <button type=\"submit\" onClick={onSubmit} className=\"mx-2 artistCreateButton\">\n                        Log In\n                    </button>\n\n                    <Link to=\"/createartist\">\n                        <button className=\"mx-2 artistCreateButton\">\n                            Create Account\n                        </button>\n                    </Link>\n                </form>\n\n                <Modal show={show} handleClose={handleClose} error={errMsg} />\n                \n            </div>\n        </div>\n    )\n}\n    \nexport default LogIn;","import React, { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport API from '../utils/API';\nimport ModalAlert from './Modal';\nimport AuthServices from '../Services/AuthorizationService'\nimport {AuthContext} from '../Context/AuthorizationContext'\n\nconst CreateArtist = () => {\n    // useHistory hook for routing\n    let history = useHistory();\n\n    //State for user data\n    const [user, setUser] = useState([{\n        'bandName': '',\n        'location': '',\n        'userName': '',\n        'password': ''\n    }]);\n    // State for bg color for password input\n    const [passColor, setPassColor] = useState('');\n    // State for bg color for confirm password input\n    const [confirmPassColor, setConfirmPassColor] = useState('');\n    // State for password requirements message\n    const [msgToggle, setMsgToggle] = useState('hidden');\n    // State for password validation of password strength\n    const [passStrength, setPassStrength] = useState(false);\n    // State for confirm password input element\n    const [passToggle, setPassToggle] = useState('none');\n    // State for user password confirm\n    const [passCheck, setPassCheck] = useState('');\n    // State for submit btn visibility \n    const [btnVisible, setBtnVisible] = useState('hidden');\n    // State for modal error message\n    const [errMsg, setErrMsg] = useState('');\n    // State for modal visibility\n    const [show, setShow] = useState(false);\n \n    // Context for authentication\n    const {setCurrentUser, setIsAuth, setId} = useContext(AuthContext);\n\n    // useRef for password strength validation\n    const passwordEl = useRef('');\n    const confirmPassEl = useRef('');\n\n    // Modal functions for closing and showing\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // Function for setting user data to user sate\n    const createArtist = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        setUser({...user, [name]: value});\n    }\n\n    // Validate password strength\n    const validPass = () => {\n        // Regex for pw strength requirements\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&_])[A-Za-z\\d$@$!%*?&_]{8,}$/;\n        const { value } = passwordEl.current;\n        // Show pw requirements message\n        setMsgToggle('visible');\n\n        // If pw requirements met show password confirm input & change bg color to green\n        if (regex.test(value)) {\n            setPassToggle('block');\n            setPassColor('rgb(128, 255, 128)');   \n        } else { \n            setPassToggle('none'); \n            setPassColor('rgb(255, 153, 153)');\n        }\n    }\n\n    // Set state for the value of the confirm password\n    const confirmPass = () => {\n        const { value } = confirmPassEl.current;\n        // If confirm pw matches pw, change confirm pw bg color to green & set state for requirement strength to passing\n        if( value === user.password ) {\n            setConfirmPassColor('rgb(128, 255, 128)');\n            setPassStrength(true);\n        } else { setConfirmPassColor('rgb(255, 153, 153)') }\n        \n        // Set password to state\n        setPassCheck(value);\n    }\n\n    // If password passes requirements, handle submit btn visibility and POST user token to Google for reCaptcha verification \n    const captchaOnChange = (responseToken) => {\n        if (passStrength) {\n            setBtnVisible('visible');\n            API.recaptchaUserVerify(responseToken);\n        } \n    }\n    \n    // Submit user data to the DB\n    const submitArtist = e => {\n        e.preventDefault();\n        // If users passwords don't match display modal, clear out the input fields, change pw fields back to white, hide confirm pw input, and set state of password requirement to fail. \n       if (user.password !== passCheck){\n            document.getElementById('password').value='';\n            document.getElementById('passCheck').value='';\n            setErrMsg('Passwords do not match! Please try again.');\n            setPassColor('');\n            setConfirmPassColor('');\n            setPassToggle('none');\n            setPassStrength(false);\n            handleShow();\n        } else {\n            (async () => {\n                try {\n                    // Create the user in the DB\n                    const res = await API.createBand(user);\n                    // If there is a duplicate email address display modal and clear email input field\n                    if (res.data.errors) {\n                        document.getElementById('userName').value = '';\n                        setErrMsg(res.data.errors.userName.message);\n                        handleShow();\n                    }else {\n                        const resUser = await AuthServices.login(user)\n                            if (resUser.isAuthenticated) {\n                                setCurrentUser(resUser.userName)\n                                setIsAuth(resUser.isAuthenticated)\n                                API.getBandByUserId(resUser.id)\n                                    .then(bandRes => {\n                                        setId(bandRes.data[0]._id)\n                                         // If no errors send uer to their bandpage\n                                        history.push(`/updateartist/${bandRes.data[0]._id}`)\n                                    });\n                            } else {\n                                setErrMsg('Sorry you Need to fill out');\n                                handleShow();\n                            }\n                    }\n                } catch (err) { console.error(err) }\n            })();\n        }\n    }\n\n    // Render the create user page\n    return (\n        <div className='d-flex flex-column justify-content-center align-items-center mt-5'>\n            <div className='formcontent p-2'>\n            <h1 className='text-center'>Create Your Artist Profile</h1>\n                <form onSubmit={submitArtist}>\n\n                    <div className='form-group'>\n                        <label htmlFor='bandName'>\n                            Artist/Band Name:\n                        </label>\n                        <input type='text' className='form-control' id='bandName' aria-describedby='bandNameHelp' placeholder='Enter Name' name='bandName' onChange={createArtist} required></input>\n                    </div>\n\n                    <div className='form-group'>\n                        <label htmlFor='location'>\n                            Location (City, State):\n                        </label>\n                        <input type='text' className='form-control' id='bandLocation' aria-describedby='location' placeholder='Enter Location' name='location' onChange={createArtist}></input>\n                    </div>\n\n                    <div className='form-group'>\n                        <label htmlFor='userName'>\n                            Create Username:\n                        </label>\n                        <input type='email' className='form-control' id='userName' aria-describedby='emailHelp' placeholder='Enter email for username' name='userName' onChange={ createArtist } required></input>\n                    </div>\n\n                    <div className='form-group'>\n                        <label htmlFor='password'>\n                            Create Password:\n                        </label>\n                        <input type='password' className='form-control' id='password' placeholder='Password' name='password' onChange={ createArtist } onInput={ validPass } ref={passwordEl} style={{ backgroundColor: passColor }} required></input>\n                        <p style={{ fontSize: '12px', margin: '0 5px', visibility: msgToggle }}>min 8 chars - one upper, lower, number, & symbol</p>\n                    </div>\n\n                    <div className='form-group'>\n                        <label htmlFor='passCheck' style={{ display: passToggle }}>\n                            Confirm Password:\n                        </label>\n                        <input type='password' className='form-control' id='passCheck' placeholder='Confirm Password' name='passCheck' style={{ display: passToggle, backgroundColor: confirmPassColor }} onChange={ confirmPass } ref={ confirmPassEl } required></input>\n                    </div>\n\n                    <ModalAlert show={ show } handleClose={ handleClose } error={ errMsg }/>\n                \n                    <ReCAPTCHA\n                        sitekey={ process.env.REACT_APP_GOOGLE_RECAP_SITE_KEY }\n                        render='explicit'\n                        onChange={ captchaOnChange }\n                        style={{ display: passStrength ? 'block' : 'none' }}\n                    />\n\n                    <button type='submit' value={'Submit'} className='artistCreateButton'  style={{visibility: btnVisible }}>\n                        Submit\n                    </button>\n\n                </form>\n\n            </div>\n        </div>\n    \n    )\n}\n\n\nexport default CreateArtist;","import React, { useEffect, useState } from 'react';\nimport Rating from 'react-rating'\nimport API from \"../utils/API\";\n\nconst ReviewBody = ({review}) => {\n    const [venueName, setVenueName] = useState ([])\n    useEffect(() => {\n        const fetchVenue = async () => {\n          const result = await API.getVenueById(review.venue)\n          setVenueName(result.data.venueName)\n        }\n        fetchVenue()\n      }, [review.venue]);\n\n    const formatter = new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    });\n    \n    return (\n        <tr>\n          <td>{formatter.format(Date.parse(review.createdAt))}</td>\n           <td>{venueName}</td>\n           <td><Rating initialRating={review.rating} emptySymbol=\"fa fa-star-o fa-2x\" readonly fullSymbol=\"fa fa-star fa-2x\" /></td>\n           <td>{review.reviewText}</td>\n        </tr>\n    )\n}\n\nexport default ReviewBody;","import React from 'react';\nimport ReviewBody from \"./artist-ReviewBody\"\n\nconst ReviewsTable = ({reviews, isLoading}) => {\n   \n    return isLoading ? (<h1>Loading....</h1>) : \n    (\n        <table className=\"table table-responsive table-dark table-striped table-bordered bandreviews\">\n        <thead>\n            <tr>\n            <th className=\"text-center\">Date</th>\n            <th className=\"text-center\">Venue Name</th>\n            <th className=\"text-center\">Rating</th>\n            <th className=\"text-center\">Review</th>\n            </tr>\n        </thead>\n      <tbody>\n        {reviews.map(review => (<ReviewBody review={review} key={review._id}/>))}\n      </tbody>\n    </table>\n    )\n\n}\n\nexport default ReviewsTable;","import React from 'react';\nimport API from '../utils/API'\n\n\n\nconst ArtistLinks = ({ artist, isLoading, title, edit }) => {\n  \n    // On click remove user link from DB and DOM\n    const handleOnClick = (e) => {\n        API.deleteLink({bandId:artist._id, id:e.target.id});\n        document.getElementById(e.target.id).parentNode.parentNode.remove();\n    }\n\n    // Iterate over band links for display. \n    const links = artist.bandLinks.map((link) => (\n        <li key={link._id} className='artistLink__li'>\n            <a href={`https://${link.siteUrl}`} target='_blank' rel='noreferrer'>\n                {link.siteName}\n            </a>\n            { !edit ? null :\n            <span>\n                <i className=\"fa fa-times\" aria-hidden=\"true\" id={link._id} onClick={ handleOnClick }></i>\n            </span>\n            }\n            <br />\n        </li>\n    ));\n    \n    // Render artist links\n    return isLoading ? (<h1>Loading....</h1>) : \n    (  \n        <div className=\"d-flex flex-column\">\n            <p style={{marginBottom: 0}}>\n                <u>{title} Band Media Links:</u>\n            </p>\n            <ul>\n                { links }\n            </ul>\n        </div>\n    )\n}\n\nexport default ArtistLinks;","import React from 'react';\n\nconst ArtistLinkInput = ({ links, linkId, remove }) => {\n\n    // On click remove user link from DB and DOM\n    const handleOnClick = (e) => {\n        remove(e.target.id);\n    }\n\n    return (\n        <div className='d-flex flex-row mb-3'>\n            <input \n                type='text' \n                className='form-control' \n                id={`siteUrl${linkId}`}\n                placeholder='Add Url Here' \n                name='siteUrl' \n                defaultValue={ links.length >= linkId + 1 ? links[linkId].siteUrl : null } \n            />\n            <select \n                className='artistUpdateButton' \n                id={`linkSelection${linkId}`} \n                defaultValue={ links.length >= linkId + 1 ? links[linkId].siteName : 'DEFAULT' }>\n                    <option value='DEFAULT' disabled>Link Type</option>\n                    <option value='Facebook'>Facebook</option>\n                    <option value='Instagram'>Instagram</option>\n                    <option value='Bandcamp'>Bandcamp</option>\n                    <option value='Youtube'>Youtube</option>\n                    <option value='Website'>Website</option>\n            </select>\n            { !window.location.hash.includes('updateartist') ? \n                <span>\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" id={linkId} onClick={ handleOnClick } />\n                </span> : null\n            }\n        </div>\n    );\n}\n \nexport default ArtistLinkInput;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ArtistLinkInput from './ArtistLinkInput';\nimport API from '../utils/API';\nimport Modal from './Modal';\n\nconst ArtistEdit = ({ artist, create, handleEdit, id }) => {\n    // useHistory hook for routing\n    let history = useHistory();\n    // State for artist object from DB\n    const [editArtist, setEditArtist] = useState(artist);\n    // State of page for profile create vs profile edit\n    const [createPage, setCreatePage] = useState(false);\n    // State for bands links   \n    const [addLink, setAddLink] = useState([]);\n    // State for modal error message\n    const [modalMsg, setModalMsg] = useState('');\n    // State for modal visibility\n    const [show, setShow] = useState(false);\n    // State for the linkId to be deleted\n    const [deleteId, setDeleteId] = useState(null);\n\n  \n    // If it is the create profile page, create state is set to true\n    useEffect(() => {\n        window.location.hash.includes('updateartist') ? setCreatePage(true) : setCreatePage(false);\n    }, []);\n\n    // For the 'Create Profile' screen. Get the artist data and set newArtist state\n    useEffect(() => {\n        if (createPage){\n            (async () => {\n                try {\n                    const artist = await API.getBand(id);\n                    setEditArtist(artist.data);\n                } catch (err) { console.error(err) }\n            })();\n        }\n    }, [createPage]);\n  \n    // Render Input fields for band links that are stored in DB\n    useEffect(() => {\n        let linkInputs = [...addLink]\n        if (artist && !show) {\n            editArtist.bandLinks.forEach((link, i) => {\n                linkInputs.push(\n                    <ArtistLinkInput\n                        key={i}\n                        linkId={i}\n                        links={artist.bandLinks}\n                        remove={deleteLinkInput}\n                    />\n                );\n            });\n            setAddLink(linkInputs);  \n        }        \n    },[]);\n    \n    // Update state of link list when delete id changes\n    useEffect(() => {\n        if (deleteId !== null){\n            const deleteLink = addLink.filter(link => link.key !== deleteId);\n            const updatedArtist = editArtist;\n\n            updatedArtist.bandLinks.splice(deleteId, 1);\n            setEditArtist(updatedArtist);\n\n            return addLink.length > 0 ? setAddLink(deleteLink) : null;\n        }\n    }, [deleteId]);\n    \n    // Handle input change\n    const handleChange = (e) => {\n        setEditArtist({\n            ...editArtist,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    // Render a link input field\n    const addLinkInput = () => {    \n            setAddLink([...addLink, \n                <ArtistLinkInput \n                    key={ addLink.length } \n                    linkId={ addLink.length } \n                    links={ createPage ? [] : editArtist.bandLinks } \n                    remove={ deleteLinkInput }\n                />\n            ])\n    }\n\n    // Get the linkInput id to be deleted and set it to state\n    const deleteLinkInput = (id) => {\n        setDeleteId(id);\n    }\n   \n    // Function to update the artists info in the DB\n    const updateArtist = async () => {\n        try {\n            await API.updateBandData(editArtist._id, editArtist);\n        } catch (err) { console.log(err) }\n    }\n\n    // Function to trim off http:// or https:// from a users link input\n    const trimURL = (url) => {\n        const regex = (/^(http:\\/\\/|https:\\/\\/)[a-z0-9]+([-.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/gim);\n\n        url = url.toLowerCase().trim();\n\n        return regex.test(url) ? url.replace(/^(http:\\/\\/|https:\\/\\/)/, '') : url;\n    }\n\n    // Function to retrieve input values for the new link and set that to artist state\n    const editLink = () => {\n        if (editArtist) { editArtist.bandLinks = [] }\n        \n        addLink.forEach((link,i )=> {\n            const linkValue = document.getElementById(`siteUrl${i}`).value;\n            const linkType = document.getElementById(`linkSelection${i}`).value;\n            const newArtist = editArtist;\n            \n            if (linkValue !== '' && linkType !== 'DEFAULT') {\n\n                newArtist.bandLinks.push({\n                    siteName: linkType,\n                    siteUrl: trimURL(linkValue)\n                });\n                setEditArtist({ ...editArtist, newArtist });\n            }\n        });\n    }\n\n    // Initializes function to update the artists info \n    const handleBtnSubmit = (event) => {\n        event.preventDefault();\n        editLink();\n        updateArtist();\n        localStorage.setItem(\"id\", `${id}`)\n        setModalMsg(`${editArtist.bandName}'s profile was updated`);\n        handleShow();\n    }\n\n    // Modal functions for closing and showing\n    const handleClose = () => { \n        setShow(false); \n        createPage ? history.push(`/bandpage/${id}`) : handleEdit()\n    };\n    const handleShow = () => setShow(true);\n\n    // Render edit form\n    return (\n        <>\n            <form>\n                { create ? null :\n                    <>\n                        <h1>\n                            { artist.bandName }\n                        </h1>\n            \n                        <div className='form-group'>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                id=\"bandLocation\"  \n                                name=\"location\" \n                                value={ editArtist.location }\n                                onChange={ handleChange }\n                            />\n                        </div>\n                    </>\n                }\n    \n                <div className='form-group'>\n                    <h3>\n                        <u>Bio:</u>\n                    </h3>\n                    <div className=\"d-flex bandbio\">\n                        <textarea \n                            className=\"form-control\" \n                            id=\"artistBio\" \n                            rows=\"3\" \n                            value={ artist ? editArtist.bandBio: undefined } \n                            onChange={handleChange} \n                            name=\"bandBio\" \n                        />\n                    </div>\n                </div>\n    \n                <div className='form-group'>\n                    <p>\n                        <u>Contact Email:</u>\n                    </p>\n                    <input \n                        type=\"email\" \n                        className=\"form-control\" \n                        id=\"artistContact\" \n                        placeholder=\"Add Contact Email\" \n                        name=\"contact\" \n                        value={ artist ? editArtist.contact : undefined }\n                        onChange={ handleChange } \n                    />\n                </div>\n    \n                <div className=\"form-group\">\n                    <div>\n                        <label htmlFor=\"artistLinks\">Add A Link:</label>\n                        { addLink.map(input => (input)) }\n                    </div>\n                </div>\n            \n                <span>\n                    <p>\n                        <i className=\"fa fa-plus\" aria-hidden=\"true\" onClick={ addLinkInput }></i>\n                        Add a link\n                    </p>\n                </span>\n    \n                <button type=\"submit\" value={\"Submit\"} className=\"artistUpdateButton\" onClick={ handleBtnSubmit }>\n                    Save\n                </button>\n                    \n            </form>\n\n            <Modal \n                show={ show } \n                handleClose={ handleClose } \n                error={ modalMsg } \n                title={ true }\n            />\n        </>\n    );\n}\n \nexport default ArtistEdit;","import React, { useState } from 'react';\nimport { WidgetLoader, Widget } from 'react-cloudinary-upload-widget';\n\nconst CloudinaryWidget = (props) => {\n    // State for widget btn display toggle per upload status\n    const [btnToggle, setBtnToggle] = useState('block');    \n\n    const onSuccess = results => { \n        props.onSuccess(results); \n        setBtnToggle('none');\n    }\n    const onFailure =  err => console.error(err); \n\n    return (\n        <>\n            <WidgetLoader /> \n            <Widget\n                sources={['local', 'camera', 'facebook', 'instagram']}\n                sourceKeys={{ facebookAppId: '2dds35jdw21', instagramClientId: 'd7aadf962m' }}\n                resourceType={'image'}\n                cloudName={ process.env.REACT_APP_CLOUD_NAME }\n                uploadPreset={ process.env.REACT_APP_UP_PRESET }\n                buttonText={ props.title }\n                style={{\n                    color: 'white',\n                    border: 'none',\n                    width: '120px',\n                    backgroundColor: '#343A40',\n                    borderRadius: '4px',\n                    height: '25px',\n                    margin: '10px 0',\n                    display: btnToggle\n                }}\n                cropping={ false }\n                onSuccess={ onSuccess } \n                onFailure={ onFailure }\n            />\n        </>\n    )\n}\n\nexport default CloudinaryWidget;","import React from 'react';\nimport ArtistLinks from './artist-Links'\nimport ArtistEdit from './ArtistEdit';\nimport CloudinaryWidget from './CloudinaryWidget';\nimport API from '../utils/API'\n\nconst Artist = ({artist, isLoading, id, edit, handleEdit }) => {\n    const userId = localStorage.getItem(\"id\");\n    const url = window.location.href;\n    const bandId = url.substring(url.lastIndexOf('/') +1);\n\n    // If band photo exists render it\n    const renderImg = () => {\n      if (artist.bandImg) { return ( <img alt=\"bandphoto\" className=\"img-fluid bandphoto\" src={ artist.bandImg } /> ) }\n    }\n\n    // If band links exist render them\n    const renderBandLinks = () => {\n      if (artist.bandLinks.length > 0) { return (<ArtistLinks artist={ artist } isLoading={isLoading} edit={ edit } />) }\n    }\n\n    // Handle Cloudinary results if user updates pic\n    const handleCloudResults = (results) => {\n        API.updateBandData(artist._id, { bandImg: results.info.url });\n        window.location.reload();\n    }\n\n    // Render artist info. If in Edit mode the ArtistEdit component is rendered\n    return isLoading ? (<h1>Loading....</h1>) : (\n        <div className=\"d-flex flex-row flex-wrap align-items-center\">\n    \n            <div className='d-flex flex-column'>\n                { renderImg() }\n                { edit ? <CloudinaryWidget  title='Update pic' onSuccess={ handleCloudResults }/> : null }\n            </div>\n            \n            <div className=\"d-flex flex-column p-2 flex-wrap\">\n                { edit ? <ArtistEdit artist={ artist } id={ id } renderBandLinks= { renderBandLinks() } handleEdit={ handleEdit }/> :\n                \n                <>\n                    <h1>\n                        {artist.bandName}\n                            { userId !== bandId ? null :\n                                <span>\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\" onClick={ handleEdit }></i>\n                            </span>\n                            }\n                    </h1>\n                    <h2>\n                        {artist.location}\n                    </h2>\n                    <h3>\n                        <u>Bio:</u>\n                    </h3>\n    \n                    <div className=\"d-flex bandbio\">\n                        <p>{artist.bandBio}</p>\n                    </div>\n    \n                    <p>\n                        <u>Contact Info:</u>\n                        <br />\n                        <a href={\"mailto:\" + artist.contact}>\n                            { artist.contact }\n                        </a>\n                    </p>\n                \n\n                { renderBandLinks() }\n                </>\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default Artist;","import React, { useEffect, useState } from 'react';\nimport ReviewsTable from \"./artist-ReviewsTable\";\nimport Artist from \"./artist-artistBody\";\nimport API from \"../utils/API\";\n\nconst BandPage = ({ match }) => {\n  // State for artist data\n  const [artist, setArtist] = useState ('');\n  // State for artists reviews\n  const [reviews, setReviews] = useState([]);\n  // State for loading message\n  const [isLoading, setIsLoading] = useState(true);\n  // State for editing band profile\n  const [edit, setEdit] = useState(false);\n\n  // Call DB for artist & their review data and set to state\n  useEffect(() => {\n    (async () => {\n        try {\n          const artist = await API.getBand(match.params.id);\n          const reviews = await API.getReviewByBand(match.params.id);\n          setArtist(artist.data);\n          setReviews(reviews.data);\n          setIsLoading(false);\n        } catch (err) { console.error(err) }\n      })();\n  }, [match.params.id, edit]);\n\n  const handleEdit = () => {\n    // setEdit(true)\n    edit ? setEdit(false) : setEdit(true);\n  }\n\n  // Render the artist page. If in edit mode the Artist reviews are not rendered\n  return (\n    <div className=\"d-flex flex-column mt-2 p-2 align-items-center\">\n      <Artist artist={ artist } isLoading={ isLoading } id={match.params.id} edit={ edit } handleEdit={ handleEdit } />\n      \n      { edit ? null : \n        <div className=\"d-flex flex-column flex-wrap\">\n          <h1>\n            <u>Artist Reviews</u>\n          </h1>\n          <ReviewsTable reviews={reviews} isLoading={isLoading} id={match.params.id} />\n        </div>\n      }\n      \n      <hr />\n    </div>\n  )\n}\n    \nexport default BandPage;","import React, {useContext, useEffect, useState} from 'react';\nimport Rating from 'react-rating'\nimport { Link } from 'react-router-dom';\nimport {AuthContext} from '../Context/AuthorizationContext'\nimport API from \"../utils/API\";\n//API VENUES\n\nconst VenueBody = ({venue}) => {\nconst {id, isAuth} = useContext(AuthContext)\nconst [isDuplicate, setIsDuplicate] = useState(false);\nconst createReviewLink = `/createReview/${id}`\nconst [newVenue, setNewVenue] = useState({\n    \"venueName\": venue.name,\n    \"venueAddress\": [venue.location.address || \"\", venue.location.city + \", \" + venue.location.state, \"United States\"]\n    })\n\n        const createDBVenue = async () => {\n            try{\n                if (venue.location.address === undefined){\n                    setNewVenue({\n                    \"venueName\": venue.name,\n                    \"venueAddress\": [\"\", venue.location.city + \", \" + venue.location.state, \"United States\"]\n                    })\n                    console.log(newVenue)\n                    await API.createVenueByName(venue.venueName, newVenue)\n                }\n                else{\n                    setNewVenue({\n                    \"venueName\": venue.name,\n                    \"venueAddress\": [venue.location.address, venue.location.city + \", \" +  venue.location.state, \"United States\"]\n                    })\n                    await API.createVenueByName(venue.venueName, newVenue)\n                }\n            }catch(err){\n                console.log(err)\n            }\n        }\n\nuseEffect(() => {\n    const compairDB = async () => {\n        try{\n            const dbVenues = await API.getVenues()\n            const dbVenue = dbVenues.data\n            const dbVenueName = dbVenue.map(venue => venue.venueName)\n            const duplicateFinder = dbVenueName.map(venue => venue)\n            if ( duplicateFinder.includes(venue.name) ) {\n                setIsDuplicate(true)\n            }\n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n    compairDB()\n\n}, [venue.name])\n\n\n\n    return isDuplicate ? null : (\n\n        <div className=\"my-2 mb-2 p-2 d-flex flex-column venueDiv flex-wrap searchedVenues\">\n        <div className=\"d-flex flex-column mx-2 apitext\">\n        <h3><u>{venue.name}</u></h3>\n        <div className=\"d-flex flex-row align-items-center\">\n        <Rating initialRating={0} emptySymbol=\"fa fa-star-o fa-2x smallstars\" readonly fullSymbol=\"fa fa-star fa-2x smallstars\" />\n        <h5 className=\"m-2\">No Reviews</h5>\n        </div>\n        {isAuth?<Link to={createReviewLink} >\n        <button onClick={createDBVenue}>Add Review</button>\n        </Link>:null}\n        <p className=\"m-0\">{venue.location.address}</p>\n        <p className=\"m-0\">{venue.location.city + \", \" + venue.location.state}</p>\n        </div>\n        <table className=\"table table-responsive table-striped table-bordered bandreviews apiVenueReviews\">\n        <thead>\n            <tr>\n            <th className=\"text-center\">Date</th>\n            <th className=\"text-center\">Venue Name</th>\n            <th className=\"text-center\">Rating</th>\n            <th className=\"text-center\">Review</th>\n            </tr>\n        </thead>\n        </table>\n        </div>\n\n    )\n}\n\nexport default VenueBody;","import React from 'react';\nimport VenueBody from './venueAPIBody'\n\n\nconst APIVenue = ({venuesAPI, isLoading}) => {\n   \n    return isLoading ? (\"\") : \n    (\n        <div className=\"d-flex flex-column flex-wrap\">\n        {venuesAPI.map(venue => (<VenueBody key={venue.id} venue={venue}/>))}\n        </div>\n\n    )\n\n}\n\nexport default APIVenue;","import React, { useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom'\nimport Rating from 'react-rating'\nimport API from \"../utils/API\";\n\n\n\nconst VenueReviewBody = ({review}) => {\n\n    const [artistName, setArtistName] = useState ([])\n    const [artistId, setArtistId] = useState()\n\n   const formatter = new Intl.DateTimeFormat(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    });\n\n    useEffect(() => {\n          const fetchArtist = async () => {\n          const result = await API.getBand(review.author)\n          const artistReview = result.data\n          console.log(artistReview)\n          setArtistId(artistReview._id)\n          setArtistName(artistReview.bandName)\n        }\n        fetchArtist()\n      }, [review.author]);\n\n    return (\n\n\n      <>\n        <tr>\n           <td >{formatter.format(Date.parse(review.createdAt))}</td> \n           <td><Link to={`/bandpage/${artistId}`}>{artistName}</Link></td>\n           <td><Rating initialRating={review.rating} emptySymbol=\"fa fa-star-o fa-2x smallstars\" readonly fullSymbol=\"fa fa-star fa-2x smallstars\" /></td>\n           <td>{review.reviewText}</td>\n        </tr>\n      </>\n      \n\n    )\n}\n\nexport default VenueReviewBody;","import React from 'react';\nimport VenueReviewBody from './venueDBReviewsBody'\n\nconst VenueReviewsTable = ({reviews, isLoading}) => {\n\n    return isLoading ? (<h1>Loading....</h1>) : \n    (\n\n        <div className=\"d-flex flex-wrap\">\n        <table className=\"table-bordered bandreviews\">\n        <thead>\n            <tr>\n            <th className=\"text-center\">Date</th>\n            <th className=\"text-center\">Band</th>\n            <th className=\"text-center\">Rating</th>\n            <th className=\"text-center\">Review</th>\n            </tr>\n        </thead>\n      <tbody>\n          {reviews.map(review => (<VenueReviewBody review={review} key={review._id}/>))}\n      </tbody>\n    </table>\n    </div>\n    \n    )\n\n}\n\nexport default VenueReviewsTable;","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Rating from 'react-rating'\nimport VenueReviewsTable from './venueDBReviewsTable'\nimport { AuthContext } from '../Context/AuthorizationContext';\nimport API from \"../utils/API\";\n\n\nconst Venue = ({dbVenues}) => {\n  const{isAuth}=useContext(AuthContext)\n  const {id} = useContext(AuthContext)\n  const createReviewLink = `/createReview/${id}` \n  const [reviews, setReviews] = useState([])\n  const [reviewsRating, setReviewsRating] = useState(\"\")\n\n  useEffect(() => {\n\n  const fetchReviews = async () => {\n      try {\n          const reviews = await API.getReviewByVenue(dbVenues._id)\n          const venuesReviews = reviews.data\n          const reviewsAvg = []\n          setReviews(venuesReviews)\n          var i\n          for (i = 0; 0 < venuesReviews.length; i++){\n            reviewsAvg.push(venuesReviews[i].rating)\n            setReviewsRating((reviewsAvg.reduce((a, b ) => a + b, 0))/reviewsAvg.length)\n          }\n      }\n      catch(err) {\n        console.log(err)\n      }\n  }\n\n  fetchReviews();\n  \n  },[dbVenues._id]);\n    \n  if (dbVenues.venueAddress === undefined){\n    return null;\n  }\n  else {\n\n    return (\n\n      <div className=\"flex-column d-flex flex-wrap mt-5 mb-4 p-3 align-items-start venueDiv searchedVenues\">\n            <div className=\"flex-wrap p-2\">\n            <h2 className=\"m-0\"><u>{dbVenues.venueName}</u></h2>\n            <div className=\"flex-row align-items-center\">\n            <Rating initialRating={reviewsRating} emptySymbol=\"fa fa-star-o fa-2x smallstars\" readonly fullSymbol=\"fa fa-star fa-2x smallstars\" />\n            <h5>{reviews.length} Reviews</h5>\n            </div>\n            {isAuth?<Link to={createReviewLink}>\n            <button>Add Review</button>\n            </Link>:null}\n            <h3 className=\"m-0\"><u>Address:</u></h3>\n            <div className=\"flex-column\">\n            <p className=\"m-0\">{dbVenues.venueAddress[0]}</p> \n            <p className=\"m-0\">{dbVenues.venueAddress[1]}</p>\n            <p className=\"m-0\">{dbVenues.venueAddress[2]}</p>\n            </div>\n            </div>\n            <VenueReviewsTable reviews={reviews}/>\n      \n      </div>\n\n    )\n\n  }\n\n}\n\nexport default Venue;","import axios from 'axios';\nimport React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport APIVenue from './venueAPI'\nimport Venue from './venueDB.js'\nimport API from \"../utils/API\";\nimport { AuthContext } from '../Context/AuthorizationContext';\n\n\nconst VenuePage = () => {\n  //USE OF STATE ON VENUEMAIN PAGE\n  const {isAuth, id, setId}=useContext(AuthContext)\n  const [dbVenues, setdbVenues] = useState([[]])\n  const [isLoading, setisLoading] = useState(true)\n  const [search, setSearch] = useState({venueName: \"\", city: \"\", radius: \"\" })\n  const [venuesAPI, setVenueAPI] = useState([])\n  setId(localStorage.getItem(\"id\"))\n  //MAKES THE SEARCH API CALL DEPENDING ON WHAT THE NAME/CITY/RADIUS IS\n  const handleBtnSubmit = (e) => {\n    e.preventDefault();\n    fetchVenuesAPI();\n    fetchVenues();\n  }\n\n  //MAKES THE API CALL TO SEATGEEK API\n  const fetchVenuesAPI = async () => {\n    try {\n      const newRadius = search.radius*1609.344;\n      const url = `https://api.foursquare.com/v2/venues/search?client_id=GSIEWB3V0L4OOFEWHBX4R0K1MOB0CJOJWGLSHHEP0DPKHNP1&client_secret=IABLARJ3OWCNSLW1VR00W4IB33FK3H1MLP32XJF5JWW3LFL4&v=20180323&categoryId=4bf58dd8d48988d1e5931735`;\n      const result = await axios(`${url}&limit=10&near=${search.city}&radius=${newRadius}`)\n      setVenueAPI(result.data.response.venues);\n      setisLoading(false)\n    } catch (err) { console.error(err); }\n  }\n\n  //MAKES DATABASE CALL TO FIND VENUE MADE ON DB\n  const fetchVenues = async () => {\n\n    const newResult = await API.getVenues()\n    const allVenues = newResult.data\n    const matchedVenues = []\n    const notmatchVenues = []\n    \n    //IF SEARCH BAR FUNCTIONALITY\n      var i\n      for (i=0; i < allVenues.length; i++){\n\n        //IF VENUENAME SEARCH CONTAINS VENUE IN DB\n        if (allVenues[i].venueName.replace(/\\s/g, \"\").toLowerCase().includes(search.venueName.replace(/\\s/g, \"\").toLowerCase()) === true){\n          //IF THE VENUE IS LOCATED IN THE CITY YOU ARE SEARCHING\n          if (allVenues[i].venueAddress[1].replace(/\\s/g, \"\").toLowerCase().includes(search.city.replace(/\\s/g, \"\").toLowerCase()) === true){\n            matchedVenues.push(allVenues[i])\n          }\n          else {\n            notmatchVenues.push(allVenues[i])\n          }\n        }\n        // IF NO MATCH IN OUR DBVENUE MATCHES SEARCH NAME\n        else if ((allVenues[i].venueName.replace(/\\s/g, \"\").toLowerCase().includes(search.venueName.replace(/\\s/g, \"\").toLowerCase()))){\n          //BUT IF IT MATCHES A CITY SEARCH\n          if (allVenues[i].venueAddress[1].replace(/\\s/g, \"\").toLowerCase().includes(search.city.replace(/\\s/g, \"\").toLowerCase()) === true){\n            matchedVenues.push(allVenues[i])\n          }\n          else {\n            notmatchVenues.push(allVenues[i])\n          }\n        } \n      }\n\n    setdbVenues(matchedVenues)\n\n  }\n\n  //SETS THE SEARCH STATE\n  function handleChange(event) {\n\n    const value = event.target.value\n\n    setSearch({\n      ...search,\n      [event.target.name]: value\n    })\n\n  }\n\n  return (\n\n    <div className=\"flex-column mt-2 p-2\">\n      <div className=\"d-flex justify-content-center align-items-center flex-column\">\n      <h1><u>Search for a Venue</u></h1>\n\n      {/* SEARCH INPUTS */}\n      <form>\n        <input type=\"text\" placeholder=\"Search..\" name={\"venueName\"} value={search.venueName} className=\"mb-2 mx-2 venueSearch\" onChange={handleChange}></input>\n        <input type=\"text\" placeholder=\"Specifiy City..\" name={\"city\"} value={search.city} className=\"mb-2 mx-2 venueSearch\" onChange={handleChange}></input>\n        <input type=\"number\" placeholder=\"How Many Miles..\" name={\"radius\"} value={search.radius} className=\"mb-2 mx-2 venueSearch \" onChange={handleChange}></input>\n        <button onClick={handleBtnSubmit} className=\"venueSearch venueSearchBtn\">Search Venues</button>\n        {isAuth?<Link to={`/createVenue/${id}`}>\n        <button className=\"venueSearchBtn\">Create Venue</button>\n        </Link>:null}\n      </form>\n\n      {/* WHERE VENUES SHOW UP */}\n      <div className=\"align-items-center\">\n      {dbVenues.map(venue => (<Venue dbVenues={venue} />))}\n      <APIVenue venuesAPI={venuesAPI} isLoading={isLoading} />\n      </div>\n      </div>\n    </div>\n    \n  )\n}\n\nexport default VenuePage;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport API from '../utils/API';\nimport Modal from './Modal';\n\nconst CreateVenue = () => {\n    const [address] = useState([])\n    const [newVenueName, setNewVenueName] = useState(\"\")\n    const [newVenue, setNewVenue] = useState({\n            \"venueName\": newVenueName,\n            \"venueAddress\": address\n    })\n    // State for modal error message\n    const [modalMsg, setModalMsg] = useState('');\n    // State for modal visibility\n    const [show, setShow] = useState(false);\n    let history = useHistory();\n\n    const handleClose = () => { setShow(false); history.push(\"/venuepage\") };\n    const handleShow = () => setShow(true);\n\n\n    const createVenue = (event) => {\n        const target = event.target.name\n        const value = event.target.value\n        setNewVenue({...newVenue, [target]: value})\n    }\n    \n    const postNewVenue = async (event) => {\n        event.preventDefault();\n        try {\n            createAddress()\n             await API.createVenueByName(newVenue.venueName, newVenue)\n            setModalMsg(newVenue.venueName + ' was created');\n            handleShow();\n            \n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    const createVenueName = (event) => {\n        const value = event.target.value\n        setNewVenueName(value)\n        \n    }\n\n    const createAddress = () => {\n        let venueAddress = address\n        address.push(\n            document.getElementById('0').value,\n            document.getElementById('1').value,\n            document.getElementById('2').value\n        )\n        setNewVenue({...newVenue, venueAddress})\n    }\n\n    return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center mt-5\">\n    <div className=\"formcontent p-2\">\n    <h1 className=\"text-center\">Create Venue Review</h1>\n    <form>\n        <div className=\"form-group d-flex flex-column\">\n            <label htmlFor=\"venueName\">Venue Name:</label>\n            <input type=\"text\" id=\"venueName\" name=\"venueName\" onChange={createVenueName && createVenue}></input>\n        </div>\n        <div className=\"form-group\">\n        <label htmlFor=\"venueAddress\">Venue Address:</label>\n        <div className=\"d-flex flex-column\">\n        <input type=\"text\" id=\"0\" name=\"0\" placeholder=\"Street Address 1\"></input>\n        <input type=\"text\" id=\"1\" name=\"1\" placeholder=\"Street Address 2\"></input>\n        <input type=\"text\" id=\"2\" name=\"2\" placeholder=\"City, State\"></input>\n        </div>\n        </div>\n        <button type=\"submit\" value={\"Submit\"} className=\"artistCreateButton\" onClick={postNewVenue}>Submit</button>\n        </form>\n            <Modal show={show} handleClose={handleClose} error={modalMsg} title={true} />\n        </div>\n    </div>\n    \n     )\n}\n\nexport default CreateVenue;","import React from 'react';\n\n\nconst VenueSelector = ({venue}) => {\n\n    return (\n        <>\n        <option value={venue._id}>{venue.venueName}</option>\n        </>\n    )\n}\n\nexport default VenueSelector;","import React, { useState, useEffect, useContext } from 'react';\nimport VenueSelector from './createReviewVenueSelector'\nimport API from '../utils/API'\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../Context/AuthorizationContext';\nimport Modal from './Modal';\n\nconst CreateReview = () => {\n  // State for modal error message\n  const [modalMsg, setModalMsg] = useState('');\n  // State for modal visibility\n  const [show, setShow] = useState(false);\n  const {id, setId}=useContext(AuthContext)\n  setId(localStorage.getItem(\"id\"))\n  const handleClose = () => { setShow(false); history.push(`/venuepage/${id}`) };\n  const handleShow = () => setShow(true);\n\n    const [allVenues, setAllVenues] = useState([])\n    const [venueReview, setVenueReview] = useState({\n        \"venue\": \"\",\n        \"rating\": \"\",\n        \"reviewText\": \"\"\n    })\n    let history = useHistory();\n    \n    useEffect(() => {\n        const fetchVenues = async () => {\n          const result = await API.getVenues()\n          const allVenues = result.data\n          if (allVenues === undefined) {\n            setAllVenues([{venueName:\"\"}, {venueName:\"\"}])\n            console.log(\"cannot reach\")\n          }\n          else {\n            setAllVenues(allVenues)\n          }\n        }\n        fetchVenues()\n      }, []);\n    \n    const createReview = (event) => {\n        const target = event.target.name\n        const value = event.target.value\n        setVenueReview({...venueReview, [target]: value, rating:  parseInt(value)})\n    }\n    \n    const submitReview = async (event) => {\n        event.preventDefault();\n        try {\n             await API.createReview(id, venueReview)\n            setModalMsg('Review created!');\n            handleShow();\n        } catch(err){\n            console.log(err)\n        }\n    }\n\n    return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center mt-5\">\n    <div className=\"formcontent p-2\">\n    <h1 className=\"text-center\">Create Venue Review</h1>\n    <form>\n        <div className=\"form-group d-flex flex-column\">\n            <label htmlFor=\"venueName\">Venue Name:</label>\n            <select className=\"form-select\" id=\"venue\" name=\"venue\" onChange={createReview}>\n            <option>Select Venue</option>\n            {allVenues.map(venue => (<VenueSelector key={venue._id} venue={venue}/>))}\n            </select>\n        </div>\n        <div className=\"form-group\">\n        <label htmlFor=\"venueReview\">Review:</label>\n        <textarea className=\"form-control\" id=\"reviewText\" name=\"reviewText\" maxlength={250} onChange={createReview} rows=\"3\"></textarea>\n        </div>        \n        <div className=\"form-group d-flex flex-column\">\n        <label htmlFor=\"venueRating\">Rate Venue (1-5):</label>\n        <select id=\"rating\" name=\"rating\" onChange={createReview}>\n            <option value={1}>1</option>\n            <option value={2}>2</option>\n            <option value={3}>3</option>\n            <option value={4}>4</option>\n            <option value={5}>5</option>\n        </select>\n        </div>\n        <button type=\"submit\" value={\"Submit\"} onClick={submitReview} className=\"artistCreateButton\">Submit</button>\n        </form>\n        <Modal show={show} handleClose={handleClose} error={modalMsg} title={true} />\n        </div>\n    </div>\n    \n     )\n}\n\nexport default CreateReview;","import React, { useState, useEffect } from 'react';\nimport CloudinaryWidget from './CloudinaryWidget';\nimport API from '../utils/API';\nimport ArtistEdit from './ArtistEdit';\n\n\nconst UpdateArtist = ({ match }) => {\n    // State of artist object from DB\n    const [artist, setArtist] = useState();\n    // State of img upload status message\n    const [msgToggle, setMsgToggle] = useState('none');\n    \n    // Retrieves artist data from the database to be used\n    useEffect(() => {\n        const fetchArtist = async () => {\n            const result = await API.getBand(match.params.id)\n            const userArtist = result.data\n            setArtist(userArtist)\n        }\n        fetchArtist();\n    }, [match.params.id]);\n\n    // Cloudinary widget, send url results to the artist state\n    const handleCloudResults = (results) => {\n        setArtist({\n            ...artist,\n            bandImg: results.info.url\n        });\n        API.updateBandData(artist._id, { bandImg: results.info.url });\n        setMsgToggle('block');\n    }\n\n    // Render Update artist profile screen\n    return (\n        <div className=\"d-flex flex-column justify-content-center align-items-center mt-5\">\n            <div className=\"formcontent p-2\">\n\n                <h1 className=\"text-center\">\n                    Create Your Artist Profile\n                </h1>\n\n                <CloudinaryWidget onSuccess={ handleCloudResults } title='Add a pic'/>\n                <h4 style={{ color: 'white', display: msgToggle }}>\n                    Image uploaded!\n                </h4>\n\n                <ArtistEdit create={true} id={ match.params.id }/>\n\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateArtist;","import React, {useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {AuthContext} from '../Context/AuthorizationContext'\n// blocking access to non users\nconst UserRoutes = ({component: Component, ...rest}) => {\n    const {isAuth } = useContext(AuthContext)\n    return (\n        // setup route properties\n        <Route {...rest} render={props =>{\n            if(!isAuth){\n                // not authorized link or reroute to home page\n                return <Redirect to={{pathname: '/', \n                                state: {from: props.location}}} />\n            }\n            // return the initial component with it's properties.\n            return <Component {...props} />\n        }} />\n    )\n}\n\nexport default UserRoutes\n","import React, {useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {AuthContext} from '../Context/AuthorizationContext'\n// blocking routes for logged in users\nconst UserRoutes = ({component: Component, ...rest}) => {\n    const {isAuth, id} = useContext(AuthContext)\n    const bandpage = `/bandpage/${id}`\n    return (\n        // set up the route properties\n        <Route {...rest} render={props =>{\n            if(isAuth){\n                // set up redirect if trying to access non user routes, like login\n                return <Redirect to={{pathname: bandpage, \n                                state: {from: props.location}}} />\n            }\n            // otherwise return the set component with it's props\n            return <Component {...props} />\n        }} />\n    )\n}\n\nexport default UserRoutes","import React, {useState} from 'react';\nimport NavBar from './components/navbar'\nimport Home from './components/main-home'\nimport LogIn from './components/main-login'\nimport CreateArtist from './components/createArtist'\nimport BandPage from './components/main-artist'\nimport VenuePage from './components/main-venuepage'\nimport CreateVenue from './components/createVenue';\nimport CreateReview from './components/createReview';\nimport UpdateArtist from './components/artist-Update';\nimport './components/styles/main.css'\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport UserRoutes from './hocs/UserRoutes'\nimport NonUserRoutes from './hocs/NonUserRoutes'\nimport AuthProvider from './Context/AuthorizationContext';\n\n\nfunction App() {\n  const [currentUser, setCurrentUser]=useState();\n  const [isAuth, setIsAuth]=useState(false);\n  const [id, setId]=useState()\n\n  return (\n    <AuthProvider value ={{currentUser, isAuth, id, setId, setCurrentUser, setIsAuth} }>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/venuepage/:id\" component={VenuePage} />\n          <Route exact path=\"/venuepage/\" component={VenuePage} />\n          <NonUserRoutes path=\"/\" exact component={Home}/>\n          <NonUserRoutes path=\"/login\" component={LogIn}/>\n          <NonUserRoutes path=\"/createartist\" component={CreateArtist}/>\n          <UserRoutes path=\"/bandpage/:id\" component={BandPage}/>\n          <UserRoutes path=\"/createReview/:id\" component={CreateReview} />\n          <UserRoutes path=\"/createVenue/:id\" component={CreateVenue} />\n          <UserRoutes path=\"/updateartist/:id\" component={UpdateArtist} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './components/styles/main.css'\n\n\n\nReactDOM.render(\n  \n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.unregister();\n"],"sourceRoot":""}